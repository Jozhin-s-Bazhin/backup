

diff --git a/home/roman/backup/home-manager/home-manager/.git/HEAD b/home/roman/backup/home-manager/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/home-manager/.git/config b/home/roman/backup/home-manager/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/home-manager/.git/description b/home/roman/backup/home-manager/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/info/exclude b/home/roman/backup/home-manager/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/config.nix b/home/roman/backup/home-manager/home-manager/config.nix
deleted file mode 100644
index 19daeb5..0000000
--- a/home/roman/backup/home-manager/home-manager/config.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-# Here lives shit I don't understand
-{pkgs, config, ... }:
-
-{
-  home.username = "roman";
-  home.homeDirectory = "/home/roman";
-  home.stateVersion = "23.11"; # Do not change
-
-  # Enable XDG desktop portal
-  xdg.portal = {
-    enable = true;
-    extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
-    config.common.default = "gtk";
-  };
-
-  # Enable Pipewire
-
-  programs.home-manager.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.lock b/home/roman/backup/home-manager/home-manager/flake.lock
deleted file mode 100644
index f909396..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-{
-  "nodes": {
-    "ags": {
-      "inputs": {
-        "nixpkgs": "nixpkgs"
-      },
-      "locked": {
-        "lastModified": 1708986959,
-        "narHash": "sha256-pTh3n2Lp8Twr8Qv30E86gU6NfoNoId7Da+6P1qEG/Jc=",
-        "owner": "Aylur",
-        "repo": "ags",
-        "rev": "ee3e65e8003a39c2ff1f46dca60308771da6072c",
-        "type": "github"
-      },
-      "original": {
-        "owner": "Aylur",
-        "repo": "ags",
-        "type": "github"
-      }
-    },
-    "home-manager": {
-      "inputs": {
-        "nixpkgs": [
-          "nixpkgs"
-        ]
-      },
-      "locked": {
-        "lastModified": 1708451036,
-        "narHash": "sha256-tgZ38NummEdnXvxj4D0StHBzXgceAw8CptytHljH790=",
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "rev": "517601b37c6d495274454f63c5a483c8e3ca6be1",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708475490,
-        "narHash": "sha256-g1v0TsWBQPX97ziznfJdWhgMyMGtoBFs102xSYO4syU=",
-        "owner": "NixOS",
-        "repo": "nixpkgs",
-        "rev": "0e74ca98a74bc7270d28838369593635a5db3260",
-        "type": "github"
-      },
-      "original": {
-        "owner": "NixOS",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "nixpkgs_2": {
-      "locked": {
-        "lastModified": 1708296515,
-        "narHash": "sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "ags": "ags",
-        "home-manager": "home-manager",
-        "nixpkgs": "nixpkgs_2"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.nix b/home/roman/backup/home-manager/home-manager/flake.nix
deleted file mode 100644
index 855dfa7..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{
-  description = "Home Manager configuration of roman";
-
-  inputs = {
-    # Specify the source of Home Manager and Nixpkgs.
-    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
-    home-manager = {
-      url = "github:nix-community/home-manager";
-      inputs.nixpkgs.follows = "nixpkgs";
-    };
-
-    # AGS
-    ags.url = "github:Aylur/ags";
-  };
-
-  outputs = { nixpkgs, home-manager, ... }@inputs:
-    let
-      system = "x86_64-linux";
-      pkgs = nixpkgs.legacyPackages.${system};
-    in {
-      homeConfigurations."roman" = home-manager.lib.homeManagerConfiguration {
-        inherit pkgs;
-
-        # Specify your home configuration modules here, for example,
-        # the path to your home.nix.
-        modules = [ ./home.nix ];
-
-        # Optionally use extraSpecialArgs
-        # to pass through arguments to home.nix
-
-	# AGS
-	extraSpecialArgs = { inherit inputs; };
-      };
-    };
-}
diff --git a/home/roman/backup/home-manager/home-manager/home.nix b/home/roman/backup/home-manager/home-manager/home.nix
deleted file mode 100644
index f869802..0000000
--- a/home/roman/backup/home-manager/home-manager/home.nix
+++ /dev/null
@@ -1,40 +0,0 @@
-#  _   _    ____    _    _   _____
-# | | | |  / __ \  | \  / | |  ___|
-# | |_| | | |  | | |  \/  | | |__
-# |  _  | | |  | | | |\/| | |  __|
-# | | | | | |__| | | |  | | | |___
-# |_| |_|  \____/  |_|  |_| |_____|
-
-# By Roman Bezroutchko
-
-
-{ inputs, config, pkgs, ... }:
-
-{
-  imports = [
-    ./package_config/package_config.nix
-    ./config.nix
-  ];
-  nixpkgs.config.allowUnfree = true;
-
-  home.packages = with pkgs; [
-    # Essentials
-    floorp
-    kitty
-    (waybar.overrideAttrs (oldAttrs: { mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ]; }))
-    mako
-    libnotify
-    hyprpaper
-    wofi
-    nerdfonts
-
-    # Other
-    lf
-    vscodium 
-    lutris
-    libreoffice
-  ];
-
-  home.file = {
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix b/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
deleted file mode 100644
index f3ae57e..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#             _____   _____
-#     /\     / ____| / ____|
-#    /  \   | |  __  | (___  
-#   / /\ \  | | |_ | \___  \ 
-#  / ____ \ | |__| |  ____) |
-# /_/    \_\ \_____| |_____/ 
-                        
-# By Roman Bezroutchko
-
-{ inputs, config, pkgs, ... }:
-{
-  # add the home manager module
-  imports = [ 
-    inputs.ags.homeManagerModules.default 
-  ];
-
-  programs.ags = {
-    enable = true;
-
-    # additional packages to add to gjs's runtime
-    extraPackages = with pkgs; [
-      gtksourceview
-      webkitgtk
-      accountsservice
-    ];
-  };
-
-  xdg.configFile = {
-    "ags/config.js".source = ./config.js;
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js b/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js b/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
deleted file mode 100644
index ce08770..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export default {
-    windows: [
-        // this is where window definitions will go
-    ]
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js b/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
deleted file mode 100644
index 637d4a5..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
+++ /dev/null
@@ -1,60 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    general = {
-      gaps_in = 5;
-      gaps_out = 20;
-      border_size = 2;
-      "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
-      "col.inactive_border" = "rgba(595959aa)";
-
-      layout = "dwindle";
-
-      allow_tearing = false;
-    };
-
-    decoration = {
-      rounding = 10;
-
-      blur = {
-        enabled = true;
-        size = 3;
-        passes = 1;
-        
-        vibrancy = 0.1696;
-      };
-
-      drop_shadow = true;
-      shadow_range = 4;
-      shadow_render_power = 3;
-      "col.shadow" = "rgba(1a1a1aee)";
-    };
-
-    animations = {
-      enabled = true;
-      bezier = [ "myBezier, 0.05, 0.9, 0.1, 1.05" ];
-      animation = [ 
-	"windows, 1, 7, myBezier"
-    	"windowsOut, 1, 7, default, popin 80%"
-    	"border, 1, 10, default"
-    	"borderangle, 1, 8, default"
- 	"fade, 1, 7, default"
-    	"workspaces, 1, 6, default"
-      ];
-    };
-
-    dwindle = {
-      pseudotile = true;
-      preserve_split = true;
-    };
-
-    master = {
-      new_is_master = true;
-    };
-
-    misc = {
-      force_default_wallpaper = 1;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
deleted file mode 100644
index 234a376..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#  _    ___     _______  _____  _               _   _ _____  
-# | |  | \ \   / /  __ \|  __ \| |        /\   | \ | |  __ \ 
-# | |__| |\ \_/ /| |__) | |__) | |       /  \  |  \| | |  | |
-# |  __  | \   / |  ___/|  _  /| |      / /\ \ | . ` | |  | |
-# | |  | |  | |  | |    | | \ \| |____ / ____ \| |\  | |__| |
-# |_|  |_|  |_|  |_|    |_|  \_\______/_/    \_\_| \_|_____/ 
-
-# By Roman Bezroutchko
-
-{ config, pkgs, ... }:
-
-{
-  imports = [
-    # Startup
-    ./startup.nix
-
-    # Appearance
-    ./appearance.nix
-
-    # Input
-    ./input.nix
-
-    # Keybindings
-    ./keybinds.nix
-
-    # Other
-    ./other.nix
-  ];  
-
-  wayland.windowManager.hyprland.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
deleted file mode 100644
index 61594b0..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
+++ /dev/null
@@ -1,23 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    input = {
-      kb_layout = "us";
-      kb_variant = "";
-      kb_model ="";
-      kb_options ="";
-      kb_rules ="";
-      follow_mouse = 1;
-
-      touchpad = {
-        natural_scroll = true;
-      };
-      sensitivity = 0;
-    };
-
-    gestures = {
-      workspace_swipe = true;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
deleted file mode 100644
index 7b2adfa..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
+++ /dev/null
@@ -1,41 +0,0 @@
-{ config, pkgs, ... }:
-
-let
-  # Workspace bindings
-  workspaces_num = [ 1 2 3 4 5 6 7 8 9 ];
-  generateWorkspace = num: "SUPER, ${toString num}, workspace, ${toString num}";
-  generateMoveToWorkspace = num: "SUPER SHIFT, ${toString num}, movetoworkspace, ${toString num}";
-  workspaceBindings = (map generateWorkspace(workspaces_num)) ++ (map generateMoveToWorkspace(workspaces_num));
-
-in 
-{
-  wayland.windowManager.hyprland.settings = {
-    bind = [
-      # Controls
-      "SUPER, Space, killactive"
-
-      "SUPER, H, movefocus, l"
-      "SUPER SHIFT, H, movewindow, l"
-      "SUPER, J, movefocus, d"
-      "SUPER SHIFT, J, movewindow, d"
-      "SUPER, K, movefocus, u"
-      "SUPER SHIFT, K, movewindow, u"
-      "SUPER, L, movefocus, r"
-      "SUPER SHIFT, L, movewindow, r"
-
-      # Important applications
-      "SUPER, Tab, exec, wofi --show drun"
-      "SUPER, Return, exec, kitty"
-      "SUPER, B, exec, floorp"
-
-      # Other applications
-    ] 
-    ++
-    workspaceBindings;
-
-    bindm = [
-      "SUPER, mouse:272, movewindow"
-      "SUPER, mouse:273, resizewindow"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
deleted file mode 100644
index baa7aa3..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
+++ /dev/null
@@ -1,9 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    monitor = [
-      ", preferred, auto, 1"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
deleted file mode 100644
index 32c0717..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
+++ /dev/null
@@ -1,14 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    env = [
-      "XCURSOR_SIZE, 24"
-      "QT_QPA_PLATFORMTHEME, qt5ct"
-    ];
-
-    exec-once = [
-      "waybar"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/other.nix b/home/roman/backup/home-manager/home-manager/package_config/other.nix
deleted file mode 100644
index 38ba247..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/other.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  # Git
-  programs.git = {
-    enable = true;
-    userName = "Jozhin-s-Bazhin";
-    userEmail = "rbezroutchko@gmail.com";
-  };
-
-  # GTK
-  gtk = {
-    enable = true;
-    font = {
-      name = "Sans";
-      size = 11;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix b/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
deleted file mode 100644
index 2004f66..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
+++ /dev/null
@@ -1,10 +0,0 @@
-{ pkgs, config, ... }:
-
-{
-  imports = [
-    ./other.nix
-    ./ags/ags.nix
-    ./hypr/hyprland.nix
-    ./zsh.nix
-  ];
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix b/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
deleted file mode 100644
index d357641..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
+++ /dev/null
@@ -1,24 +0,0 @@
-{ config, pkgs, ... }:
-
-{ 
-  programs.zsh = {
-    enable = true;
-    enableAutosuggestions = true;
-    enableCompletion = true;
-    enableVteIntegration = true;
-
-    # Aliases
-    shellAliases = {
-
-      # Basic stuff
-      v = "nvim";
-      vi = "nvim";
-      vim = "nvim";
-
-      # Nix rebuilds
-      rbs = "bash ~/scripts/rebuild-aliases/rebuild-switch";
-      rbh = "bash ~/scripts/rebuild-aliases/home-switch";
-      rba = "bash ~/scripts/rebuild-aliases/backup-all";
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/style.nix b/home/roman/backup/home-manager/home-manager/style.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/weird_shit.nix b/home/roman/backup/home-manager/home-manager/weird_shit.nix
deleted file mode 100644
index 35d6715..0000000
--- a/home/roman/backup/home-manager/home-manager/weird_shit.nix
+++ /dev/null
@@ -1,4 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  
diff --git a/home/roman/backup/home-manager/home-manager/.git/HEAD b/home/roman/backup/home-manager/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/home-manager/.git/config b/home/roman/backup/home-manager/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/home-manager/.git/description b/home/roman/backup/home-manager/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/info/exclude b/home/roman/backup/home-manager/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/config.nix b/home/roman/backup/home-manager/home-manager/config.nix
deleted file mode 100644
index 19daeb5..0000000
--- a/home/roman/backup/home-manager/home-manager/config.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-# Here lives shit I don't understand
-{pkgs, config, ... }:
-
-{
-  home.username = "roman";
-  home.homeDirectory = "/home/roman";
-  home.stateVersion = "23.11"; # Do not change
-
-  # Enable XDG desktop portal
-  xdg.portal = {
-    enable = true;
-    extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
-    config.common.default = "gtk";
-  };
-
-  # Enable Pipewire
-
-  programs.home-manager.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.lock b/home/roman/backup/home-manager/home-manager/flake.lock
deleted file mode 100644
index f909396..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-{
-  "nodes": {
-    "ags": {
-      "inputs": {
-        "nixpkgs": "nixpkgs"
-      },
-      "locked": {
-        "lastModified": 1708986959,
-        "narHash": "sha256-pTh3n2Lp8Twr8Qv30E86gU6NfoNoId7Da+6P1qEG/Jc=",
-        "owner": "Aylur",
-        "repo": "ags",
-        "rev": "ee3e65e8003a39c2ff1f46dca60308771da6072c",
-        "type": "github"
-      },
-      "original": {
-        "owner": "Aylur",
-        "repo": "ags",
-        "type": "github"
-      }
-    },
-    "home-manager": {
-      "inputs": {
-        "nixpkgs": [
-          "nixpkgs"
-        ]
-      },
-      "locked": {
-        "lastModified": 1708451036,
-        "narHash": "sha256-tgZ38NummEdnXvxj4D0StHBzXgceAw8CptytHljH790=",
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "rev": "517601b37c6d495274454f63c5a483c8e3ca6be1",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708475490,
-        "narHash": "sha256-g1v0TsWBQPX97ziznfJdWhgMyMGtoBFs102xSYO4syU=",
-        "owner": "NixOS",
-        "repo": "nixpkgs",
-        "rev": "0e74ca98a74bc7270d28838369593635a5db3260",
-        "type": "github"
-      },
-      "original": {
-        "owner": "NixOS",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "nixpkgs_2": {
-      "locked": {
-        "lastModified": 1708296515,
-        "narHash": "sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "ags": "ags",
-        "home-manager": "home-manager",
-        "nixpkgs": "nixpkgs_2"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.nix b/home/roman/backup/home-manager/home-manager/flake.nix
deleted file mode 100644
index 855dfa7..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{
-  description = "Home Manager configuration of roman";
-
-  inputs = {
-    # Specify the source of Home Manager and Nixpkgs.
-    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
-    home-manager = {
-      url = "github:nix-community/home-manager";
-      inputs.nixpkgs.follows = "nixpkgs";
-    };
-
-    # AGS
-    ags.url = "github:Aylur/ags";
-  };
-
-  outputs = { nixpkgs, home-manager, ... }@inputs:
-    let
-      system = "x86_64-linux";
-      pkgs = nixpkgs.legacyPackages.${system};
-    in {
-      homeConfigurations."roman" = home-manager.lib.homeManagerConfiguration {
-        inherit pkgs;
-
-        # Specify your home configuration modules here, for example,
-        # the path to your home.nix.
-        modules = [ ./home.nix ];
-
-        # Optionally use extraSpecialArgs
-        # to pass through arguments to home.nix
-
-	# AGS
-	extraSpecialArgs = { inherit inputs; };
-      };
-    };
-}
diff --git a/home/roman/backup/home-manager/home-manager/home.nix b/home/roman/backup/home-manager/home-manager/home.nix
deleted file mode 100644
index f869802..0000000
--- a/home/roman/backup/home-manager/home-manager/home.nix
+++ /dev/null
@@ -1,40 +0,0 @@
-#  _   _    ____    _    _   _____
-# | | | |  / __ \  | \  / | |  ___|
-# | |_| | | |  | | |  \/  | | |__
-# |  _  | | |  | | | |\/| | |  __|
-# | | | | | |__| | | |  | | | |___
-# |_| |_|  \____/  |_|  |_| |_____|
-
-# By Roman Bezroutchko
-
-
-{ inputs, config, pkgs, ... }:
-
-{
-  imports = [
-    ./package_config/package_config.nix
-    ./config.nix
-  ];
-  nixpkgs.config.allowUnfree = true;
-
-  home.packages = with pkgs; [
-    # Essentials
-    floorp
-    kitty
-    (waybar.overrideAttrs (oldAttrs: { mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ]; }))
-    mako
-    libnotify
-    hyprpaper
-    wofi
-    nerdfonts
-
-    # Other
-    lf
-    vscodium 
-    lutris
-    libreoffice
-  ];
-
-  home.file = {
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix b/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
deleted file mode 100644
index f3ae57e..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#             _____   _____
-#     /\     / ____| / ____|
-#    /  \   | |  __  | (___  
-#   / /\ \  | | |_ | \___  \ 
-#  / ____ \ | |__| |  ____) |
-# /_/    \_\ \_____| |_____/ 
-                        
-# By Roman Bezroutchko
-
-{ inputs, config, pkgs, ... }:
-{
-  # add the home manager module
-  imports = [ 
-    inputs.ags.homeManagerModules.default 
-  ];
-
-  programs.ags = {
-    enable = true;
-
-    # additional packages to add to gjs's runtime
-    extraPackages = with pkgs; [
-      gtksourceview
-      webkitgtk
-      accountsservice
-    ];
-  };
-
-  xdg.configFile = {
-    "ags/config.js".source = ./config.js;
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js b/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js b/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
deleted file mode 100644
index ce08770..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export default {
-    windows: [
-        // this is where window definitions will go
-    ]
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js b/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
deleted file mode 100644
index 637d4a5..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
+++ /dev/null
@@ -1,60 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    general = {
-      gaps_in = 5;
-      gaps_out = 20;
-      border_size = 2;
-      "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
-      "col.inactive_border" = "rgba(595959aa)";
-
-      layout = "dwindle";
-
-      allow_tearing = false;
-    };
-
-    decoration = {
-      rounding = 10;
-
-      blur = {
-        enabled = true;
-        size = 3;
-        passes = 1;
-        
-        vibrancy = 0.1696;
-      };
-
-      drop_shadow = true;
-      shadow_range = 4;
-      shadow_render_power = 3;
-      "col.shadow" = "rgba(1a1a1aee)";
-    };
-
-    animations = {
-      enabled = true;
-      bezier = [ "myBezier, 0.05, 0.9, 0.1, 1.05" ];
-      animation = [ 
-	"windows, 1, 7, myBezier"
-    	"windowsOut, 1, 7, default, popin 80%"
-    	"border, 1, 10, default"
-    	"borderangle, 1, 8, default"
- 	"fade, 1, 7, default"
-    	"workspaces, 1, 6, default"
-      ];
-    };
-
-    dwindle = {
-      pseudotile = true;
-      preserve_split = true;
-    };
-
-    master = {
-      new_is_master = true;
-    };
-
-    misc = {
-      force_default_wallpaper = 1;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
deleted file mode 100644
index 234a376..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#  _    ___     _______  _____  _               _   _ _____  
-# | |  | \ \   / /  __ \|  __ \| |        /\   | \ | |  __ \ 
-# | |__| |\ \_/ /| |__) | |__) | |       /  \  |  \| | |  | |
-# |  __  | \   / |  ___/|  _  /| |      / /\ \ | . ` | |  | |
-# | |  | |  | |  | |    | | \ \| |____ / ____ \| |\  | |__| |
-# |_|  |_|  |_|  |_|    |_|  \_\______/_/    \_\_| \_|_____/ 
-
-# By Roman Bezroutchko
-
-{ config, pkgs, ... }:
-
-{
-  imports = [
-    # Startup
-    ./startup.nix
-
-    # Appearance
-    ./appearance.nix
-
-    # Input
-    ./input.nix
-
-    # Keybindings
-    ./keybinds.nix
-
-    # Other
-    ./other.nix
-  ];  
-
-  wayland.windowManager.hyprland.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
deleted file mode 100644
index 61594b0..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
+++ /dev/null
@@ -1,23 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    input = {
-      kb_layout = "us";
-      kb_variant = "";
-      kb_model ="";
-      kb_options ="";
-      kb_rules ="";
-      follow_mouse = 1;
-
-      touchpad = {
-        natural_scroll = true;
-      };
-      sensitivity = 0;
-    };
-
-    gestures = {
-      workspace_swipe = true;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
deleted file mode 100644
index 7b2adfa..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
+++ /dev/null
@@ -1,41 +0,0 @@
-{ config, pkgs, ... }:
-
-let
-  # Workspace bindings
-  workspaces_num = [ 1 2 3 4 5 6 7 8 9 ];
-  generateWorkspace = num: "SUPER, ${toString num}, workspace, ${toString num}";
-  generateMoveToWorkspace = num: "SUPER SHIFT, ${toString num}, movetoworkspace, ${toString num}";
-  workspaceBindings = (map generateWorkspace(workspaces_num)) ++ (map generateMoveToWorkspace(workspaces_num));
-
-in 
-{
-  wayland.windowManager.hyprland.settings = {
-    bind = [
-      # Controls
-      "SUPER, Space, killactive"
-
-      "SUPER, H, movefocus, l"
-      "SUPER SHIFT, H, movewindow, l"
-      "SUPER, J, movefocus, d"
-      "SUPER SHIFT, J, movewindow, d"
-      "SUPER, K, movefocus, u"
-      "SUPER SHIFT, K, movewindow, u"
-      "SUPER, L, movefocus, r"
-      "SUPER SHIFT, L, movewindow, r"
-
-      # Important applications
-      "SUPER, Tab, exec, wofi --show drun"
-      "SUPER, Return, exec, kitty"
-      "SUPER, B, exec, floorp"
-
-      # Other applications
-    ] 
-    ++
-    workspaceBindings;
-
-    bindm = [
-      "SUPER, mouse:272, movewindow"
-      "SUPER, mouse:273, resizewindow"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
deleted file mode 100644
index baa7aa3..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
+++ /dev/null
@@ -1,9 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    monitor = [
-      ", preferred, auto, 1"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
deleted file mode 100644
index 32c0717..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
+++ /dev/null
@@ -1,14 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    env = [
-      "XCURSOR_SIZE, 24"
-      "QT_QPA_PLATFORMTHEME, qt5ct"
-    ];
-
-    exec-once = [
-      "waybar"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/other.nix b/home/roman/backup/home-manager/home-manager/package_config/other.nix
deleted file mode 100644
index 38ba247..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/other.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  # Git
-  programs.git = {
-    enable = true;
-    userName = "Jozhin-s-Bazhin";
-    userEmail = "rbezroutchko@gmail.com";
-  };
-
-  # GTK
-  gtk = {
-    enable = true;
-    font = {
-      name = "Sans";
-      size = 11;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix b/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
deleted file mode 100644
index 2004f66..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
+++ /dev/null
@@ -1,10 +0,0 @@
-{ pkgs, config, ... }:
-
-{
-  imports = [
-    ./other.nix
-    ./ags/ags.nix
-    ./hypr/hyprland.nix
-    ./zsh.nix
-  ];
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix b/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
deleted file mode 100644
index d357641..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
+++ /dev/null
@@ -1,24 +0,0 @@
-{ config, pkgs, ... }:
-
-{ 
-  programs.zsh = {
-    enable = true;
-    enableAutosuggestions = true;
-    enableCompletion = true;
-    enableVteIntegration = true;
-
-    # Aliases
-    shellAliases = {
-
-      # Basic stuff
-      v = "nvim";
-      vi = "nvim";
-      vim = "nvim";
-
-      # Nix rebuilds
-      rbs = "bash ~/scripts/rebuild-aliases/rebuild-switch";
-      rbh = "bash ~/scripts/rebuild-aliases/home-switch";
-      rba = "bash ~/scripts/rebuild-aliases/backup-all";
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/style.nix b/home/roman/backup/home-manager/home-manager/style.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/weird_shit.nix b/home/roman/backup/home-manager/home-manager/weird_shit.nix
deleted file mode 100644
index 35d6715..0000000
--- a/home/roman/backup/home-manager/home-manager/weird_shit.nix
+++ /dev/null
@@ -1,4 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  
diff --git a/home/roman/backup/home-manager/home-manager/.git/HEAD b/home/roman/backup/home-manager/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/home-manager/.git/config b/home/roman/backup/home-manager/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/home-manager/.git/description b/home/roman/backup/home-manager/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/info/exclude b/home/roman/backup/home-manager/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/config.nix b/home/roman/backup/home-manager/home-manager/config.nix
deleted file mode 100644
index 19daeb5..0000000
--- a/home/roman/backup/home-manager/home-manager/config.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-# Here lives shit I don't understand
-{pkgs, config, ... }:
-
-{
-  home.username = "roman";
-  home.homeDirectory = "/home/roman";
-  home.stateVersion = "23.11"; # Do not change
-
-  # Enable XDG desktop portal
-  xdg.portal = {
-    enable = true;
-    extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
-    config.common.default = "gtk";
-  };
-
-  # Enable Pipewire
-
-  programs.home-manager.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.lock b/home/roman/backup/home-manager/home-manager/flake.lock
deleted file mode 100644
index f909396..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-{
-  "nodes": {
-    "ags": {
-      "inputs": {
-        "nixpkgs": "nixpkgs"
-      },
-      "locked": {
-        "lastModified": 1708986959,
-        "narHash": "sha256-pTh3n2Lp8Twr8Qv30E86gU6NfoNoId7Da+6P1qEG/Jc=",
-        "owner": "Aylur",
-        "repo": "ags",
-        "rev": "ee3e65e8003a39c2ff1f46dca60308771da6072c",
-        "type": "github"
-      },
-      "original": {
-        "owner": "Aylur",
-        "repo": "ags",
-        "type": "github"
-      }
-    },
-    "home-manager": {
-      "inputs": {
-        "nixpkgs": [
-          "nixpkgs"
-        ]
-      },
-      "locked": {
-        "lastModified": 1708451036,
-        "narHash": "sha256-tgZ38NummEdnXvxj4D0StHBzXgceAw8CptytHljH790=",
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "rev": "517601b37c6d495274454f63c5a483c8e3ca6be1",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708475490,
-        "narHash": "sha256-g1v0TsWBQPX97ziznfJdWhgMyMGtoBFs102xSYO4syU=",
-        "owner": "NixOS",
-        "repo": "nixpkgs",
-        "rev": "0e74ca98a74bc7270d28838369593635a5db3260",
-        "type": "github"
-      },
-      "original": {
-        "owner": "NixOS",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "nixpkgs_2": {
-      "locked": {
-        "lastModified": 1708296515,
-        "narHash": "sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "ags": "ags",
-        "home-manager": "home-manager",
-        "nixpkgs": "nixpkgs_2"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.nix b/home/roman/backup/home-manager/home-manager/flake.nix
deleted file mode 100644
index 855dfa7..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{
-  description = "Home Manager configuration of roman";
-
-  inputs = {
-    # Specify the source of Home Manager and Nixpkgs.
-    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
-    home-manager = {
-      url = "github:nix-community/home-manager";
-      inputs.nixpkgs.follows = "nixpkgs";
-    };
-
-    # AGS
-    ags.url = "github:Aylur/ags";
-  };
-
-  outputs = { nixpkgs, home-manager, ... }@inputs:
-    let
-      system = "x86_64-linux";
-      pkgs = nixpkgs.legacyPackages.${system};
-    in {
-      homeConfigurations."roman" = home-manager.lib.homeManagerConfiguration {
-        inherit pkgs;
-
-        # Specify your home configuration modules here, for example,
-        # the path to your home.nix.
-        modules = [ ./home.nix ];
-
-        # Optionally use extraSpecialArgs
-        # to pass through arguments to home.nix
-
-	# AGS
-	extraSpecialArgs = { inherit inputs; };
-      };
-    };
-}
diff --git a/home/roman/backup/home-manager/home-manager/home.nix b/home/roman/backup/home-manager/home-manager/home.nix
deleted file mode 100644
index f869802..0000000
--- a/home/roman/backup/home-manager/home-manager/home.nix
+++ /dev/null
@@ -1,40 +0,0 @@
-#  _   _    ____    _    _   _____
-# | | | |  / __ \  | \  / | |  ___|
-# | |_| | | |  | | |  \/  | | |__
-# |  _  | | |  | | | |\/| | |  __|
-# | | | | | |__| | | |  | | | |___
-# |_| |_|  \____/  |_|  |_| |_____|
-
-# By Roman Bezroutchko
-
-
-{ inputs, config, pkgs, ... }:
-
-{
-  imports = [
-    ./package_config/package_config.nix
-    ./config.nix
-  ];
-  nixpkgs.config.allowUnfree = true;
-
-  home.packages = with pkgs; [
-    # Essentials
-    floorp
-    kitty
-    (waybar.overrideAttrs (oldAttrs: { mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ]; }))
-    mako
-    libnotify
-    hyprpaper
-    wofi
-    nerdfonts
-
-    # Other
-    lf
-    vscodium 
-    lutris
-    libreoffice
-  ];
-
-  home.file = {
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix b/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
deleted file mode 100644
index f3ae57e..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#             _____   _____
-#     /\     / ____| / ____|
-#    /  \   | |  __  | (___  
-#   / /\ \  | | |_ | \___  \ 
-#  / ____ \ | |__| |  ____) |
-# /_/    \_\ \_____| |_____/ 
-                        
-# By Roman Bezroutchko
-
-{ inputs, config, pkgs, ... }:
-{
-  # add the home manager module
-  imports = [ 
-    inputs.ags.homeManagerModules.default 
-  ];
-
-  programs.ags = {
-    enable = true;
-
-    # additional packages to add to gjs's runtime
-    extraPackages = with pkgs; [
-      gtksourceview
-      webkitgtk
-      accountsservice
-    ];
-  };
-
-  xdg.configFile = {
-    "ags/config.js".source = ./config.js;
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js b/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js b/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
deleted file mode 100644
index ce08770..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export default {
-    windows: [
-        // this is where window definitions will go
-    ]
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js b/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
deleted file mode 100644
index 637d4a5..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
+++ /dev/null
@@ -1,60 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    general = {
-      gaps_in = 5;
-      gaps_out = 20;
-      border_size = 2;
-      "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
-      "col.inactive_border" = "rgba(595959aa)";
-
-      layout = "dwindle";
-
-      allow_tearing = false;
-    };
-
-    decoration = {
-      rounding = 10;
-
-      blur = {
-        enabled = true;
-        size = 3;
-        passes = 1;
-        
-        vibrancy = 0.1696;
-      };
-
-      drop_shadow = true;
-      shadow_range = 4;
-      shadow_render_power = 3;
-      "col.shadow" = "rgba(1a1a1aee)";
-    };
-
-    animations = {
-      enabled = true;
-      bezier = [ "myBezier, 0.05, 0.9, 0.1, 1.05" ];
-      animation = [ 
-	"windows, 1, 7, myBezier"
-    	"windowsOut, 1, 7, default, popin 80%"
-    	"border, 1, 10, default"
-    	"borderangle, 1, 8, default"
- 	"fade, 1, 7, default"
-    	"workspaces, 1, 6, default"
-      ];
-    };
-
-    dwindle = {
-      pseudotile = true;
-      preserve_split = true;
-    };
-
-    master = {
-      new_is_master = true;
-    };
-
-    misc = {
-      force_default_wallpaper = 1;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
deleted file mode 100644
index 234a376..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#  _    ___     _______  _____  _               _   _ _____  
-# | |  | \ \   / /  __ \|  __ \| |        /\   | \ | |  __ \ 
-# | |__| |\ \_/ /| |__) | |__) | |       /  \  |  \| | |  | |
-# |  __  | \   / |  ___/|  _  /| |      / /\ \ | . ` | |  | |
-# | |  | |  | |  | |    | | \ \| |____ / ____ \| |\  | |__| |
-# |_|  |_|  |_|  |_|    |_|  \_\______/_/    \_\_| \_|_____/ 
-
-# By Roman Bezroutchko
-
-{ config, pkgs, ... }:
-
-{
-  imports = [
-    # Startup
-    ./startup.nix
-
-    # Appearance
-    ./appearance.nix
-
-    # Input
-    ./input.nix
-
-    # Keybindings
-    ./keybinds.nix
-
-    # Other
-    ./other.nix
-  ];  
-
-  wayland.windowManager.hyprland.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
deleted file mode 100644
index 61594b0..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
+++ /dev/null
@@ -1,23 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    input = {
-      kb_layout = "us";
-      kb_variant = "";
-      kb_model ="";
-      kb_options ="";
-      kb_rules ="";
-      follow_mouse = 1;
-
-      touchpad = {
-        natural_scroll = true;
-      };
-      sensitivity = 0;
-    };
-
-    gestures = {
-      workspace_swipe = true;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
deleted file mode 100644
index 7b2adfa..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
+++ /dev/null
@@ -1,41 +0,0 @@
-{ config, pkgs, ... }:
-
-let
-  # Workspace bindings
-  workspaces_num = [ 1 2 3 4 5 6 7 8 9 ];
-  generateWorkspace = num: "SUPER, ${toString num}, workspace, ${toString num}";
-  generateMoveToWorkspace = num: "SUPER SHIFT, ${toString num}, movetoworkspace, ${toString num}";
-  workspaceBindings = (map generateWorkspace(workspaces_num)) ++ (map generateMoveToWorkspace(workspaces_num));
-
-in 
-{
-  wayland.windowManager.hyprland.settings = {
-    bind = [
-      # Controls
-      "SUPER, Space, killactive"
-
-      "SUPER, H, movefocus, l"
-      "SUPER SHIFT, H, movewindow, l"
-      "SUPER, J, movefocus, d"
-      "SUPER SHIFT, J, movewindow, d"
-      "SUPER, K, movefocus, u"
-      "SUPER SHIFT, K, movewindow, u"
-      "SUPER, L, movefocus, r"
-      "SUPER SHIFT, L, movewindow, r"
-
-      # Important applications
-      "SUPER, Tab, exec, wofi --show drun"
-      "SUPER, Return, exec, kitty"
-      "SUPER, B, exec, floorp"
-
-      # Other applications
-    ] 
-    ++
-    workspaceBindings;
-
-    bindm = [
-      "SUPER, mouse:272, movewindow"
-      "SUPER, mouse:273, resizewindow"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
deleted file mode 100644
index baa7aa3..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
+++ /dev/null
@@ -1,9 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    monitor = [
-      ", preferred, auto, 1"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
deleted file mode 100644
index 32c0717..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
+++ /dev/null
@@ -1,14 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    env = [
-      "XCURSOR_SIZE, 24"
-      "QT_QPA_PLATFORMTHEME, qt5ct"
-    ];
-
-    exec-once = [
-      "waybar"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/other.nix b/home/roman/backup/home-manager/home-manager/package_config/other.nix
deleted file mode 100644
index 38ba247..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/other.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  # Git
-  programs.git = {
-    enable = true;
-    userName = "Jozhin-s-Bazhin";
-    userEmail = "rbezroutchko@gmail.com";
-  };
-
-  # GTK
-  gtk = {
-    enable = true;
-    font = {
-      name = "Sans";
-      size = 11;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix b/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
deleted file mode 100644
index 2004f66..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
+++ /dev/null
@@ -1,10 +0,0 @@
-{ pkgs, config, ... }:
-
-{
-  imports = [
-    ./other.nix
-    ./ags/ags.nix
-    ./hypr/hyprland.nix
-    ./zsh.nix
-  ];
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix b/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
deleted file mode 100644
index d357641..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
+++ /dev/null
@@ -1,24 +0,0 @@
-{ config, pkgs, ... }:
-
-{ 
-  programs.zsh = {
-    enable = true;
-    enableAutosuggestions = true;
-    enableCompletion = true;
-    enableVteIntegration = true;
-
-    # Aliases
-    shellAliases = {
-
-      # Basic stuff
-      v = "nvim";
-      vi = "nvim";
-      vim = "nvim";
-
-      # Nix rebuilds
-      rbs = "bash ~/scripts/rebuild-aliases/rebuild-switch";
-      rbh = "bash ~/scripts/rebuild-aliases/home-switch";
-      rba = "bash ~/scripts/rebuild-aliases/backup-all";
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/style.nix b/home/roman/backup/home-manager/home-manager/style.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/weird_shit.nix b/home/roman/backup/home-manager/home-manager/weird_shit.nix
deleted file mode 100644
index 35d6715..0000000
--- a/home/roman/backup/home-manager/home-manager/weird_shit.nix
+++ /dev/null
@@ -1,4 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  
diff --git a/home/roman/backup/home-manager/home-manager/.git/HEAD b/home/roman/backup/home-manager/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/home-manager/.git/config b/home/roman/backup/home-manager/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/home-manager/.git/description b/home/roman/backup/home-manager/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/info/exclude b/home/roman/backup/home-manager/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/config.nix b/home/roman/backup/home-manager/home-manager/config.nix
deleted file mode 100644
index 19daeb5..0000000
--- a/home/roman/backup/home-manager/home-manager/config.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-# Here lives shit I don't understand
-{pkgs, config, ... }:
-
-{
-  home.username = "roman";
-  home.homeDirectory = "/home/roman";
-  home.stateVersion = "23.11"; # Do not change
-
-  # Enable XDG desktop portal
-  xdg.portal = {
-    enable = true;
-    extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
-    config.common.default = "gtk";
-  };
-
-  # Enable Pipewire
-
-  programs.home-manager.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.lock b/home/roman/backup/home-manager/home-manager/flake.lock
deleted file mode 100644
index f909396..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-{
-  "nodes": {
-    "ags": {
-      "inputs": {
-        "nixpkgs": "nixpkgs"
-      },
-      "locked": {
-        "lastModified": 1708986959,
-        "narHash": "sha256-pTh3n2Lp8Twr8Qv30E86gU6NfoNoId7Da+6P1qEG/Jc=",
-        "owner": "Aylur",
-        "repo": "ags",
-        "rev": "ee3e65e8003a39c2ff1f46dca60308771da6072c",
-        "type": "github"
-      },
-      "original": {
-        "owner": "Aylur",
-        "repo": "ags",
-        "type": "github"
-      }
-    },
-    "home-manager": {
-      "inputs": {
-        "nixpkgs": [
-          "nixpkgs"
-        ]
-      },
-      "locked": {
-        "lastModified": 1708451036,
-        "narHash": "sha256-tgZ38NummEdnXvxj4D0StHBzXgceAw8CptytHljH790=",
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "rev": "517601b37c6d495274454f63c5a483c8e3ca6be1",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708475490,
-        "narHash": "sha256-g1v0TsWBQPX97ziznfJdWhgMyMGtoBFs102xSYO4syU=",
-        "owner": "NixOS",
-        "repo": "nixpkgs",
-        "rev": "0e74ca98a74bc7270d28838369593635a5db3260",
-        "type": "github"
-      },
-      "original": {
-        "owner": "NixOS",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "nixpkgs_2": {
-      "locked": {
-        "lastModified": 1708296515,
-        "narHash": "sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "ags": "ags",
-        "home-manager": "home-manager",
-        "nixpkgs": "nixpkgs_2"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.nix b/home/roman/backup/home-manager/home-manager/flake.nix
deleted file mode 100644
index 855dfa7..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{
-  description = "Home Manager configuration of roman";
-
-  inputs = {
-    # Specify the source of Home Manager and Nixpkgs.
-    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
-    home-manager = {
-      url = "github:nix-community/home-manager";
-      inputs.nixpkgs.follows = "nixpkgs";
-    };
-
-    # AGS
-    ags.url = "github:Aylur/ags";
-  };
-
-  outputs = { nixpkgs, home-manager, ... }@inputs:
-    let
-      system = "x86_64-linux";
-      pkgs = nixpkgs.legacyPackages.${system};
-    in {
-      homeConfigurations."roman" = home-manager.lib.homeManagerConfiguration {
-        inherit pkgs;
-
-        # Specify your home configuration modules here, for example,
-        # the path to your home.nix.
-        modules = [ ./home.nix ];
-
-        # Optionally use extraSpecialArgs
-        # to pass through arguments to home.nix
-
-	# AGS
-	extraSpecialArgs = { inherit inputs; };
-      };
-    };
-}
diff --git a/home/roman/backup/home-manager/home-manager/home.nix b/home/roman/backup/home-manager/home-manager/home.nix
deleted file mode 100644
index f869802..0000000
--- a/home/roman/backup/home-manager/home-manager/home.nix
+++ /dev/null
@@ -1,40 +0,0 @@
-#  _   _    ____    _    _   _____
-# | | | |  / __ \  | \  / | |  ___|
-# | |_| | | |  | | |  \/  | | |__
-# |  _  | | |  | | | |\/| | |  __|
-# | | | | | |__| | | |  | | | |___
-# |_| |_|  \____/  |_|  |_| |_____|
-
-# By Roman Bezroutchko
-
-
-{ inputs, config, pkgs, ... }:
-
-{
-  imports = [
-    ./package_config/package_config.nix
-    ./config.nix
-  ];
-  nixpkgs.config.allowUnfree = true;
-
-  home.packages = with pkgs; [
-    # Essentials
-    floorp
-    kitty
-    (waybar.overrideAttrs (oldAttrs: { mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ]; }))
-    mako
-    libnotify
-    hyprpaper
-    wofi
-    nerdfonts
-
-    # Other
-    lf
-    vscodium 
-    lutris
-    libreoffice
-  ];
-
-  home.file = {
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix b/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
deleted file mode 100644
index f3ae57e..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#             _____   _____
-#     /\     / ____| / ____|
-#    /  \   | |  __  | (___  
-#   / /\ \  | | |_ | \___  \ 
-#  / ____ \ | |__| |  ____) |
-# /_/    \_\ \_____| |_____/ 
-                        
-# By Roman Bezroutchko
-
-{ inputs, config, pkgs, ... }:
-{
-  # add the home manager module
-  imports = [ 
-    inputs.ags.homeManagerModules.default 
-  ];
-
-  programs.ags = {
-    enable = true;
-
-    # additional packages to add to gjs's runtime
-    extraPackages = with pkgs; [
-      gtksourceview
-      webkitgtk
-      accountsservice
-    ];
-  };
-
-  xdg.configFile = {
-    "ags/config.js".source = ./config.js;
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js b/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js b/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
deleted file mode 100644
index ce08770..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export default {
-    windows: [
-        // this is where window definitions will go
-    ]
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js b/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
deleted file mode 100644
index 637d4a5..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
+++ /dev/null
@@ -1,60 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    general = {
-      gaps_in = 5;
-      gaps_out = 20;
-      border_size = 2;
-      "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
-      "col.inactive_border" = "rgba(595959aa)";
-
-      layout = "dwindle";
-
-      allow_tearing = false;
-    };
-
-    decoration = {
-      rounding = 10;
-
-      blur = {
-        enabled = true;
-        size = 3;
-        passes = 1;
-        
-        vibrancy = 0.1696;
-      };
-
-      drop_shadow = true;
-      shadow_range = 4;
-      shadow_render_power = 3;
-      "col.shadow" = "rgba(1a1a1aee)";
-    };
-
-    animations = {
-      enabled = true;
-      bezier = [ "myBezier, 0.05, 0.9, 0.1, 1.05" ];
-      animation = [ 
-	"windows, 1, 7, myBezier"
-    	"windowsOut, 1, 7, default, popin 80%"
-    	"border, 1, 10, default"
-    	"borderangle, 1, 8, default"
- 	"fade, 1, 7, default"
-    	"workspaces, 1, 6, default"
-      ];
-    };
-
-    dwindle = {
-      pseudotile = true;
-      preserve_split = true;
-    };
-
-    master = {
-      new_is_master = true;
-    };
-
-    misc = {
-      force_default_wallpaper = 1;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
deleted file mode 100644
index 234a376..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#  _    ___     _______  _____  _               _   _ _____  
-# | |  | \ \   / /  __ \|  __ \| |        /\   | \ | |  __ \ 
-# | |__| |\ \_/ /| |__) | |__) | |       /  \  |  \| | |  | |
-# |  __  | \   / |  ___/|  _  /| |      / /\ \ | . ` | |  | |
-# | |  | |  | |  | |    | | \ \| |____ / ____ \| |\  | |__| |
-# |_|  |_|  |_|  |_|    |_|  \_\______/_/    \_\_| \_|_____/ 
-
-# By Roman Bezroutchko
-
-{ config, pkgs, ... }:
-
-{
-  imports = [
-    # Startup
-    ./startup.nix
-
-    # Appearance
-    ./appearance.nix
-
-    # Input
-    ./input.nix
-
-    # Keybindings
-    ./keybinds.nix
-
-    # Other
-    ./other.nix
-  ];  
-
-  wayland.windowManager.hyprland.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
deleted file mode 100644
index 61594b0..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
+++ /dev/null
@@ -1,23 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    input = {
-      kb_layout = "us";
-      kb_variant = "";
-      kb_model ="";
-      kb_options ="";
-      kb_rules ="";
-      follow_mouse = 1;
-
-      touchpad = {
-        natural_scroll = true;
-      };
-      sensitivity = 0;
-    };
-
-    gestures = {
-      workspace_swipe = true;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
deleted file mode 100644
index 7b2adfa..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
+++ /dev/null
@@ -1,41 +0,0 @@
-{ config, pkgs, ... }:
-
-let
-  # Workspace bindings
-  workspaces_num = [ 1 2 3 4 5 6 7 8 9 ];
-  generateWorkspace = num: "SUPER, ${toString num}, workspace, ${toString num}";
-  generateMoveToWorkspace = num: "SUPER SHIFT, ${toString num}, movetoworkspace, ${toString num}";
-  workspaceBindings = (map generateWorkspace(workspaces_num)) ++ (map generateMoveToWorkspace(workspaces_num));
-
-in 
-{
-  wayland.windowManager.hyprland.settings = {
-    bind = [
-      # Controls
-      "SUPER, Space, killactive"
-
-      "SUPER, H, movefocus, l"
-      "SUPER SHIFT, H, movewindow, l"
-      "SUPER, J, movefocus, d"
-      "SUPER SHIFT, J, movewindow, d"
-      "SUPER, K, movefocus, u"
-      "SUPER SHIFT, K, movewindow, u"
-      "SUPER, L, movefocus, r"
-      "SUPER SHIFT, L, movewindow, r"
-
-      # Important applications
-      "SUPER, Tab, exec, wofi --show drun"
-      "SUPER, Return, exec, kitty"
-      "SUPER, B, exec, floorp"
-
-      # Other applications
-    ] 
-    ++
-    workspaceBindings;
-
-    bindm = [
-      "SUPER, mouse:272, movewindow"
-      "SUPER, mouse:273, resizewindow"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
deleted file mode 100644
index baa7aa3..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
+++ /dev/null
@@ -1,9 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    monitor = [
-      ", preferred, auto, 1"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
deleted file mode 100644
index 32c0717..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
+++ /dev/null
@@ -1,14 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    env = [
-      "XCURSOR_SIZE, 24"
-      "QT_QPA_PLATFORMTHEME, qt5ct"
-    ];
-
-    exec-once = [
-      "waybar"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/other.nix b/home/roman/backup/home-manager/home-manager/package_config/other.nix
deleted file mode 100644
index 38ba247..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/other.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  # Git
-  programs.git = {
-    enable = true;
-    userName = "Jozhin-s-Bazhin";
-    userEmail = "rbezroutchko@gmail.com";
-  };
-
-  # GTK
-  gtk = {
-    enable = true;
-    font = {
-      name = "Sans";
-      size = 11;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix b/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
deleted file mode 100644
index 2004f66..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
+++ /dev/null
@@ -1,10 +0,0 @@
-{ pkgs, config, ... }:
-
-{
-  imports = [
-    ./other.nix
-    ./ags/ags.nix
-    ./hypr/hyprland.nix
-    ./zsh.nix
-  ];
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix b/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
deleted file mode 100644
index d357641..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
+++ /dev/null
@@ -1,24 +0,0 @@
-{ config, pkgs, ... }:
-
-{ 
-  programs.zsh = {
-    enable = true;
-    enableAutosuggestions = true;
-    enableCompletion = true;
-    enableVteIntegration = true;
-
-    # Aliases
-    shellAliases = {
-
-      # Basic stuff
-      v = "nvim";
-      vi = "nvim";
-      vim = "nvim";
-
-      # Nix rebuilds
-      rbs = "bash ~/scripts/rebuild-aliases/rebuild-switch";
-      rbh = "bash ~/scripts/rebuild-aliases/home-switch";
-      rba = "bash ~/scripts/rebuild-aliases/backup-all";
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/style.nix b/home/roman/backup/home-manager/home-manager/style.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/weird_shit.nix b/home/roman/backup/home-manager/home-manager/weird_shit.nix
deleted file mode 100644
index 35d6715..0000000
--- a/home/roman/backup/home-manager/home-manager/weird_shit.nix
+++ /dev/null
@@ -1,4 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  
diff --git a/home/roman/backup/home-manager/.git/HEAD b/home/roman/backup/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/.git/config b/home/roman/backup/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/.git/description b/home/roman/backup/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/.git/info/exclude b/home/roman/backup/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/.git/HEAD b/home/roman/backup/home-manager/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/home-manager/.git/config b/home/roman/backup/home-manager/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/home-manager/.git/description b/home/roman/backup/home-manager/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/info/exclude b/home/roman/backup/home-manager/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/config.nix b/home/roman/backup/home-manager/home-manager/config.nix
deleted file mode 100644
index 19daeb5..0000000
--- a/home/roman/backup/home-manager/home-manager/config.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-# Here lives shit I don't understand
-{pkgs, config, ... }:
-
-{
-  home.username = "roman";
-  home.homeDirectory = "/home/roman";
-  home.stateVersion = "23.11"; # Do not change
-
-  # Enable XDG desktop portal
-  xdg.portal = {
-    enable = true;
-    extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
-    config.common.default = "gtk";
-  };
-
-  # Enable Pipewire
-
-  programs.home-manager.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.lock b/home/roman/backup/home-manager/home-manager/flake.lock
deleted file mode 100644
index f909396..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-{
-  "nodes": {
-    "ags": {
-      "inputs": {
-        "nixpkgs": "nixpkgs"
-      },
-      "locked": {
-        "lastModified": 1708986959,
-        "narHash": "sha256-pTh3n2Lp8Twr8Qv30E86gU6NfoNoId7Da+6P1qEG/Jc=",
-        "owner": "Aylur",
-        "repo": "ags",
-        "rev": "ee3e65e8003a39c2ff1f46dca60308771da6072c",
-        "type": "github"
-      },
-      "original": {
-        "owner": "Aylur",
-        "repo": "ags",
-        "type": "github"
-      }
-    },
-    "home-manager": {
-      "inputs": {
-        "nixpkgs": [
-          "nixpkgs"
-        ]
-      },
-      "locked": {
-        "lastModified": 1708451036,
-        "narHash": "sha256-tgZ38NummEdnXvxj4D0StHBzXgceAw8CptytHljH790=",
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "rev": "517601b37c6d495274454f63c5a483c8e3ca6be1",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708475490,
-        "narHash": "sha256-g1v0TsWBQPX97ziznfJdWhgMyMGtoBFs102xSYO4syU=",
-        "owner": "NixOS",
-        "repo": "nixpkgs",
-        "rev": "0e74ca98a74bc7270d28838369593635a5db3260",
-        "type": "github"
-      },
-      "original": {
-        "owner": "NixOS",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "nixpkgs_2": {
-      "locked": {
-        "lastModified": 1708296515,
-        "narHash": "sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "ags": "ags",
-        "home-manager": "home-manager",
-        "nixpkgs": "nixpkgs_2"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.nix b/home/roman/backup/home-manager/home-manager/flake.nix
deleted file mode 100644
index 855dfa7..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{
-  description = "Home Manager configuration of roman";
-
-  inputs = {
-    # Specify the source of Home Manager and Nixpkgs.
-    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
-    home-manager = {
-      url = "github:nix-community/home-manager";
-      inputs.nixpkgs.follows = "nixpkgs";
-    };
-
-    # AGS
-    ags.url = "github:Aylur/ags";
-  };
-
-  outputs = { nixpkgs, home-manager, ... }@inputs:
-    let
-      system = "x86_64-linux";
-      pkgs = nixpkgs.legacyPackages.${system};
-    in {
-      homeConfigurations."roman" = home-manager.lib.homeManagerConfiguration {
-        inherit pkgs;
-
-        # Specify your home configuration modules here, for example,
-        # the path to your home.nix.
-        modules = [ ./home.nix ];
-
-        # Optionally use extraSpecialArgs
-        # to pass through arguments to home.nix
-
-	# AGS
-	extraSpecialArgs = { inherit inputs; };
-      };
-    };
-}
diff --git a/home/roman/backup/home-manager/home-manager/home.nix b/home/roman/backup/home-manager/home-manager/home.nix
deleted file mode 100644
index f869802..0000000
--- a/home/roman/backup/home-manager/home-manager/home.nix
+++ /dev/null
@@ -1,40 +0,0 @@
-#  _   _    ____    _    _   _____
-# | | | |  / __ \  | \  / | |  ___|
-# | |_| | | |  | | |  \/  | | |__
-# |  _  | | |  | | | |\/| | |  __|
-# | | | | | |__| | | |  | | | |___
-# |_| |_|  \____/  |_|  |_| |_____|
-
-# By Roman Bezroutchko
-
-
-{ inputs, config, pkgs, ... }:
-
-{
-  imports = [
-    ./package_config/package_config.nix
-    ./config.nix
-  ];
-  nixpkgs.config.allowUnfree = true;
-
-  home.packages = with pkgs; [
-    # Essentials
-    floorp
-    kitty
-    (waybar.overrideAttrs (oldAttrs: { mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ]; }))
-    mako
-    libnotify
-    hyprpaper
-    wofi
-    nerdfonts
-
-    # Other
-    lf
-    vscodium 
-    lutris
-    libreoffice
-  ];
-
-  home.file = {
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix b/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
deleted file mode 100644
index f3ae57e..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#             _____   _____
-#     /\     / ____| / ____|
-#    /  \   | |  __  | (___  
-#   / /\ \  | | |_ | \___  \ 
-#  / ____ \ | |__| |  ____) |
-# /_/    \_\ \_____| |_____/ 
-                        
-# By Roman Bezroutchko
-
-{ inputs, config, pkgs, ... }:
-{
-  # add the home manager module
-  imports = [ 
-    inputs.ags.homeManagerModules.default 
-  ];
-
-  programs.ags = {
-    enable = true;
-
-    # additional packages to add to gjs's runtime
-    extraPackages = with pkgs; [
-      gtksourceview
-      webkitgtk
-      accountsservice
-    ];
-  };
-
-  xdg.configFile = {
-    "ags/config.js".source = ./config.js;
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js b/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js b/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
deleted file mode 100644
index ce08770..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export default {
-    windows: [
-        // this is where window definitions will go
-    ]
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js b/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
deleted file mode 100644
index 637d4a5..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
+++ /dev/null
@@ -1,60 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    general = {
-      gaps_in = 5;
-      gaps_out = 20;
-      border_size = 2;
-      "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
-      "col.inactive_border" = "rgba(595959aa)";
-
-      layout = "dwindle";
-
-      allow_tearing = false;
-    };
-
-    decoration = {
-      rounding = 10;
-
-      blur = {
-        enabled = true;
-        size = 3;
-        passes = 1;
-        
-        vibrancy = 0.1696;
-      };
-
-      drop_shadow = true;
-      shadow_range = 4;
-      shadow_render_power = 3;
-      "col.shadow" = "rgba(1a1a1aee)";
-    };
-
-    animations = {
-      enabled = true;
-      bezier = [ "myBezier, 0.05, 0.9, 0.1, 1.05" ];
-      animation = [ 
-	"windows, 1, 7, myBezier"
-    	"windowsOut, 1, 7, default, popin 80%"
-    	"border, 1, 10, default"
-    	"borderangle, 1, 8, default"
- 	"fade, 1, 7, default"
-    	"workspaces, 1, 6, default"
-      ];
-    };
-
-    dwindle = {
-      pseudotile = true;
-      preserve_split = true;
-    };
-
-    master = {
-      new_is_master = true;
-    };
-
-    misc = {
-      force_default_wallpaper = 1;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
deleted file mode 100644
index 234a376..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#  _    ___     _______  _____  _               _   _ _____  
-# | |  | \ \   / /  __ \|  __ \| |        /\   | \ | |  __ \ 
-# | |__| |\ \_/ /| |__) | |__) | |       /  \  |  \| | |  | |
-# |  __  | \   / |  ___/|  _  /| |      / /\ \ | . ` | |  | |
-# | |  | |  | |  | |    | | \ \| |____ / ____ \| |\  | |__| |
-# |_|  |_|  |_|  |_|    |_|  \_\______/_/    \_\_| \_|_____/ 
-
-# By Roman Bezroutchko
-
-{ config, pkgs, ... }:
-
-{
-  imports = [
-    # Startup
-    ./startup.nix
-
-    # Appearance
-    ./appearance.nix
-
-    # Input
-    ./input.nix
-
-    # Keybindings
-    ./keybinds.nix
-
-    # Other
-    ./other.nix
-  ];  
-
-  wayland.windowManager.hyprland.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
deleted file mode 100644
index 61594b0..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
+++ /dev/null
@@ -1,23 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    input = {
-      kb_layout = "us";
-      kb_variant = "";
-      kb_model ="";
-      kb_options ="";
-      kb_rules ="";
-      follow_mouse = 1;
-
-      touchpad = {
-        natural_scroll = true;
-      };
-      sensitivity = 0;
-    };
-
-    gestures = {
-      workspace_swipe = true;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
deleted file mode 100644
index 7b2adfa..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
+++ /dev/null
@@ -1,41 +0,0 @@
-{ config, pkgs, ... }:
-
-let
-  # Workspace bindings
-  workspaces_num = [ 1 2 3 4 5 6 7 8 9 ];
-  generateWorkspace = num: "SUPER, ${toString num}, workspace, ${toString num}";
-  generateMoveToWorkspace = num: "SUPER SHIFT, ${toString num}, movetoworkspace, ${toString num}";
-  workspaceBindings = (map generateWorkspace(workspaces_num)) ++ (map generateMoveToWorkspace(workspaces_num));
-
-in 
-{
-  wayland.windowManager.hyprland.settings = {
-    bind = [
-      # Controls
-      "SUPER, Space, killactive"
-
-      "SUPER, H, movefocus, l"
-      "SUPER SHIFT, H, movewindow, l"
-      "SUPER, J, movefocus, d"
-      "SUPER SHIFT, J, movewindow, d"
-      "SUPER, K, movefocus, u"
-      "SUPER SHIFT, K, movewindow, u"
-      "SUPER, L, movefocus, r"
-      "SUPER SHIFT, L, movewindow, r"
-
-      # Important applications
-      "SUPER, Tab, exec, wofi --show drun"
-      "SUPER, Return, exec, kitty"
-      "SUPER, B, exec, floorp"
-
-      # Other applications
-    ] 
-    ++
-    workspaceBindings;
-
-    bindm = [
-      "SUPER, mouse:272, movewindow"
-      "SUPER, mouse:273, resizewindow"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
deleted file mode 100644
index baa7aa3..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
+++ /dev/null
@@ -1,9 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    monitor = [
-      ", preferred, auto, 1"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
deleted file mode 100644
index 32c0717..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
+++ /dev/null
@@ -1,14 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    env = [
-      "XCURSOR_SIZE, 24"
-      "QT_QPA_PLATFORMTHEME, qt5ct"
-    ];
-
-    exec-once = [
-      "waybar"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/other.nix b/home/roman/backup/home-manager/home-manager/package_config/other.nix
deleted file mode 100644
index 38ba247..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/other.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  # Git
-  programs.git = {
-    enable = true;
-    userName = "Jozhin-s-Bazhin";
-    userEmail = "rbezroutchko@gmail.com";
-  };
-
-  # GTK
-  gtk = {
-    enable = true;
-    font = {
-      name = "Sans";
-      size = 11;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix b/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
deleted file mode 100644
index 2004f66..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
+++ /dev/null
@@ -1,10 +0,0 @@
-{ pkgs, config, ... }:
-
-{
-  imports = [
-    ./other.nix
-    ./ags/ags.nix
-    ./hypr/hyprland.nix
-    ./zsh.nix
-  ];
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix b/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
deleted file mode 100644
index d357641..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
+++ /dev/null
@@ -1,24 +0,0 @@
-{ config, pkgs, ... }:
-
-{ 
-  programs.zsh = {
-    enable = true;
-    enableAutosuggestions = true;
-    enableCompletion = true;
-    enableVteIntegration = true;
-
-    # Aliases
-    shellAliases = {
-
-      # Basic stuff
-      v = "nvim";
-      vi = "nvim";
-      vim = "nvim";
-
-      # Nix rebuilds
-      rbs = "bash ~/scripts/rebuild-aliases/rebuild-switch";
-      rbh = "bash ~/scripts/rebuild-aliases/home-switch";
-      rba = "bash ~/scripts/rebuild-aliases/backup-all";
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/style.nix b/home/roman/backup/home-manager/home-manager/style.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/weird_shit.nix b/home/roman/backup/home-manager/home-manager/weird_shit.nix
deleted file mode 100644
index 35d6715..0000000
--- a/home/roman/backup/home-manager/home-manager/weird_shit.nix
+++ /dev/null
@@ -1,4 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  
diff --git a/home/roman/backup/home-manager/home-manager/.git/HEAD b/home/roman/backup/home-manager/home-manager/.git/HEAD
deleted file mode 100644
index cb089cd..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/master
diff --git a/home/roman/backup/home-manager/home-manager/.git/config b/home/roman/backup/home-manager/home-manager/.git/config
deleted file mode 100644
index 515f483..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/config
+++ /dev/null
@@ -1,5 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
diff --git a/home/roman/backup/home-manager/home-manager/.git/description b/home/roman/backup/home-manager/home-manager/.git/description
deleted file mode 100644
index 498b267..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/description
+++ /dev/null
@@ -1 +0,0 @@
-Unnamed repository; edit this file 'description' to name the repository.
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
deleted file mode 100755
index 75c0af8..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/applypatch-msg.sample
+++ /dev/null
@@ -1,15 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message taken by
-# applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.  The hook is
-# allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "applypatch-msg".
-
-. git-sh-setup
-commitmsg="$(git rev-parse --git-path hooks/commit-msg)"
-test -x "$commitmsg" && exec "$commitmsg" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
deleted file mode 100755
index eb2c944..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/commit-msg.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to check the commit log message.
-# Called by "git commit" with one argument, the name of the file
-# that has the commit message.  The hook should exit with non-zero
-# status after issuing an appropriate message if it wants to stop the
-# commit.  The hook is allowed to edit the commit message file.
-#
-# To enable this hook, rename this file to "commit-msg".
-
-# Uncomment the below to add a Signed-off-by line to the message.
-# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
-# hook is more suited to it.
-#
-# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"
-
-# This example catches duplicate Signed-off-by lines.
-
-test "" = "$(grep '^Signed-off-by: ' "$1" |
-	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
-	echo >&2 Duplicate Signed-off-by lines.
-	exit 1
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
deleted file mode 100755
index 0c311f3..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/fsmonitor-watchman.sample
+++ /dev/null
@@ -1,174 +0,0 @@
-#!/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl
-
-use strict;
-use warnings;
-use IPC::Open2;
-
-# An example hook script to integrate Watchman
-# (https://facebook.github.io/watchman/) with git to speed up detecting
-# new and modified files.
-#
-# The hook is passed a version (currently 2) and last update token
-# formatted as a string and outputs to stdout a new update token and
-# all files that have been modified since the update token. Paths must
-# be relative to the root of the working tree and separated by a single NUL.
-#
-# To enable this hook, rename this file to "query-watchman" and set
-# 'git config core.fsmonitor .git/hooks/query-watchman'
-#
-my ($version, $last_update_token) = @ARGV;
-
-# Uncomment for debugging
-# print STDERR "$0 $version $last_update_token\n";
-
-# Check the hook interface version
-if ($version ne 2) {
-	die "Unsupported query-fsmonitor hook version '$version'.\n" .
-	    "Falling back to scanning...\n";
-}
-
-my $git_work_tree = get_working_dir();
-
-my $retry = 1;
-
-my $json_pkg;
-eval {
-	require JSON::XS;
-	$json_pkg = "JSON::XS";
-	1;
-} or do {
-	require JSON::PP;
-	$json_pkg = "JSON::PP";
-};
-
-launch_watchman();
-
-sub launch_watchman {
-	my $o = watchman_query();
-	if (is_work_tree_watched($o)) {
-		output_result($o->{clock}, @{$o->{files}});
-	}
-}
-
-sub output_result {
-	my ($clockid, @files) = @_;
-
-	# Uncomment for debugging watchman output
-	# open (my $fh, ">", ".git/watchman-output.out");
-	# binmode $fh, ":utf8";
-	# print $fh "$clockid\n@files\n";
-	# close $fh;
-
-	binmode STDOUT, ":utf8";
-	print $clockid;
-	print "\0";
-	local $, = "\0";
-	print @files;
-}
-
-sub watchman_clock {
-	my $response = qx/watchman clock "$git_work_tree"/;
-	die "Failed to get clock id on '$git_work_tree'.\n" .
-		"Falling back to scanning...\n" if $? != 0;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub watchman_query {
-	my $pid = open2(\*CHLD_OUT, \*CHLD_IN, 'watchman -j --no-pretty')
-	or die "open2() failed: $!\n" .
-	"Falling back to scanning...\n";
-
-	# In the query expression below we're asking for names of files that
-	# changed since $last_update_token but not from the .git folder.
-	#
-	# To accomplish this, we're using the "since" generator to use the
-	# recency index to select candidate nodes and "fields" to limit the
-	# output to file names only. Then we're using the "expression" term to
-	# further constrain the results.
-	my $last_update_line = "";
-	if (substr($last_update_token, 0, 1) eq "c") {
-		$last_update_token = "\"$last_update_token\"";
-		$last_update_line = qq[\n"since": $last_update_token,];
-	}
-	my $query = <<"	END";
-		["query", "$git_work_tree", {$last_update_line
-			"fields": ["name"],
-			"expression": ["not", ["dirname", ".git"]]
-		}]
-	END
-
-	# Uncomment for debugging the watchman query
-	# open (my $fh, ">", ".git/watchman-query.json");
-	# print $fh $query;
-	# close $fh;
-
-	print CHLD_IN $query;
-	close CHLD_IN;
-	my $response = do {local $/; <CHLD_OUT>};
-
-	# Uncomment for debugging the watch response
-	# open ($fh, ">", ".git/watchman-response.json");
-	# print $fh $response;
-	# close $fh;
-
-	die "Watchman: command returned no output.\n" .
-	"Falling back to scanning...\n" if $response eq "";
-	die "Watchman: command returned invalid output: $response\n" .
-	"Falling back to scanning...\n" unless $response =~ /^\{/;
-
-	return $json_pkg->new->utf8->decode($response);
-}
-
-sub is_work_tree_watched {
-	my ($output) = @_;
-	my $error = $output->{error};
-	if ($retry > 0 and $error and $error =~ m/unable to resolve root .* directory (.*) is not watched/) {
-		$retry--;
-		my $response = qx/watchman watch "$git_work_tree"/;
-		die "Failed to make watchman watch '$git_work_tree'.\n" .
-		    "Falling back to scanning...\n" if $? != 0;
-		$output = $json_pkg->new->utf8->decode($response);
-		$error = $output->{error};
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		# Uncomment for debugging watchman output
-		# open (my $fh, ">", ".git/watchman-output.out");
-		# close $fh;
-
-		# Watchman will always return all files on the first query so
-		# return the fast "everything is dirty" flag to git and do the
-		# Watchman query just to get it over with now so we won't pay
-		# the cost in git to look up each individual file.
-		my $o = watchman_clock();
-		$error = $output->{error};
-
-		die "Watchman: $error.\n" .
-		"Falling back to scanning...\n" if $error;
-
-		output_result($o->{clock}, ("/"));
-		$last_update_token = $o->{clock};
-
-		eval { launch_watchman() };
-		return 0;
-	}
-
-	die "Watchman: $error.\n" .
-	"Falling back to scanning...\n" if $error;
-
-	return 1;
-}
-
-sub get_working_dir {
-	my $working_dir;
-	if ($^O =~ 'msys' || $^O =~ 'cygwin') {
-		$working_dir = Win32::GetCwd();
-		$working_dir =~ tr/\\/\//;
-	} else {
-		require Cwd;
-		$working_dir = Cwd::cwd();
-	}
-
-	return $working_dir;
-}
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
deleted file mode 100755
index 9aadbef..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/post-update.sample
+++ /dev/null
@@ -1,8 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare a packed repository for use over
-# dumb transports.
-#
-# To enable this hook, rename this file to "post-update".
-
-exec git update-server-info
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
deleted file mode 100755
index c55fc3a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-applypatch.sample
+++ /dev/null
@@ -1,14 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed
-# by applypatch from an e-mail message.
-#
-# The hook should exit with non-zero status after issuing an
-# appropriate message if it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-applypatch".
-
-. git-sh-setup
-precommit="$(git rev-parse --git-path hooks/pre-commit)"
-test -x "$precommit" && exec "$precommit" ${1+"$@"}
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
deleted file mode 100755
index e23630a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-commit.sample
+++ /dev/null
@@ -1,49 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git commit" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message if
-# it wants to stop the commit.
-#
-# To enable this hook, rename this file to "pre-commit".
-
-if git rev-parse --verify HEAD >/dev/null 2>&1
-then
-	against=HEAD
-else
-	# Initial commit: diff against an empty tree object
-	against=$(git hash-object -t tree /dev/null)
-fi
-
-# If you want to allow non-ASCII filenames set this variable to true.
-allownonascii=$(git config --type=bool hooks.allownonascii)
-
-# Redirect output to stderr.
-exec 1>&2
-
-# Cross platform projects tend to avoid non-ASCII filenames; prevent
-# them from being added to the repository. We exploit the fact that the
-# printable range starts at the space character and ends with tilde.
-if [ "$allownonascii" != "true" ] &&
-	# Note that the use of brackets around a tr range is ok here, (it's
-	# even required, for portability to Solaris 10's /usr/bin/tr), since
-	# the square bracket bytes happen to fall in the designated range.
-	test $(git diff --cached --name-only --diff-filter=A -z $against |
-	  LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
-then
-	cat <<\EOF
-Error: Attempt to add a non-ASCII file name.
-
-This can cause problems if you want to work with people on other platforms.
-
-To be portable it is advisable to rename the file.
-
-If you know what you are doing you can disable this check using:
-
-  git config hooks.allownonascii true
-EOF
-	exit 1
-fi
-
-# If there are whitespace errors, print the offending file names and fail.
-exec git diff-index --check --cached $against --
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
deleted file mode 100755
index 4734b7a..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-merge-commit.sample
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to verify what is about to be committed.
-# Called by "git merge" with no arguments.  The hook should
-# exit with non-zero status after issuing an appropriate message to
-# stderr if it wants to stop the merge commit.
-#
-# To enable this hook, rename this file to "pre-merge-commit".
-
-. git-sh-setup
-test -x "$GIT_DIR/hooks/pre-commit" &&
-        exec "$GIT_DIR/hooks/pre-commit"
-:
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
deleted file mode 100755
index daec4f5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-push.sample
+++ /dev/null
@@ -1,53 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to verify what is about to be pushed.  Called by "git
-# push" after it has checked the remote status, but before anything has been
-# pushed.  If this script exits with a non-zero status nothing will be pushed.
-#
-# This hook is called with the following parameters:
-#
-# $1 -- Name of the remote to which the push is being done
-# $2 -- URL to which the push is being done
-#
-# If pushing without using a named remote those arguments will be equal.
-#
-# Information about the commits which are being pushed is supplied as lines to
-# the standard input in the form:
-#
-#   <local ref> <local oid> <remote ref> <remote oid>
-#
-# This sample shows how to prevent push of commits where the log message starts
-# with "WIP" (work in progress).
-
-remote="$1"
-url="$2"
-
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-
-while read local_ref local_oid remote_ref remote_oid
-do
-	if test "$local_oid" = "$zero"
-	then
-		# Handle delete
-		:
-	else
-		if test "$remote_oid" = "$zero"
-		then
-			# New branch, examine all commits
-			range="$local_oid"
-		else
-			# Update to existing branch, examine new commits
-			range="$remote_oid..$local_oid"
-		fi
-
-		# Check for WIP commit
-		commit=$(git rev-list -n 1 --grep '^WIP' "$range")
-		if test -n "$commit"
-		then
-			echo >&2 "Found WIP commit in $local_ref, not pushing"
-			exit 1
-		fi
-	fi
-done
-
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
deleted file mode 100755
index 819463d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-rebase.sample
+++ /dev/null
@@ -1,169 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# Copyright (c) 2006, 2008 Junio C Hamano
-#
-# The "pre-rebase" hook is run just before "git rebase" starts doing
-# its job, and can prevent the command from running by exiting with
-# non-zero status.
-#
-# The hook is called with the following parameters:
-#
-# $1 -- the upstream the series was forked from.
-# $2 -- the branch being rebased (or empty when rebasing the current branch).
-#
-# This sample shows how to prevent topic branches that are already
-# merged to 'next' branch from getting rebased, because allowing it
-# would result in rebasing already published history.
-
-publish=next
-basebranch="$1"
-if test "$#" = 2
-then
-	topic="refs/heads/$2"
-else
-	topic=`git symbolic-ref HEAD` ||
-	exit 0 ;# we do not interrupt rebasing detached HEAD
-fi
-
-case "$topic" in
-refs/heads/??/*)
-	;;
-*)
-	exit 0 ;# we do not interrupt others.
-	;;
-esac
-
-# Now we are dealing with a topic branch being rebased
-# on top of master.  Is it OK to rebase it?
-
-# Does the topic really exist?
-git show-ref -q "$topic" || {
-	echo >&2 "No such branch $topic"
-	exit 1
-}
-
-# Is topic fully merged to master?
-not_in_master=`git rev-list --pretty=oneline ^master "$topic"`
-if test -z "$not_in_master"
-then
-	echo >&2 "$topic is fully merged to master; better remove it."
-	exit 1 ;# we could allow it, but there is no point.
-fi
-
-# Is topic ever merged to next?  If so you should not be rebasing it.
-only_next_1=`git rev-list ^master "^$topic" ${publish} | sort`
-only_next_2=`git rev-list ^master           ${publish} | sort`
-if test "$only_next_1" = "$only_next_2"
-then
-	not_in_topic=`git rev-list "^$topic" master`
-	if test -z "$not_in_topic"
-	then
-		echo >&2 "$topic is already up to date with master"
-		exit 1 ;# we could allow it, but there is no point.
-	else
-		exit 0
-	fi
-else
-	not_in_next=`git rev-list --pretty=oneline ^${publish} "$topic"`
-	/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -e '
-		my $topic = $ARGV[0];
-		my $msg = "* $topic has commits already merged to public branch:\n";
-		my (%not_in_next) = map {
-			/^([0-9a-f]+) /;
-			($1 => 1);
-		} split(/\n/, $ARGV[1]);
-		for my $elem (map {
-				/^([0-9a-f]+) (.*)$/;
-				[$1 => $2];
-			} split(/\n/, $ARGV[2])) {
-			if (!exists $not_in_next{$elem->[0]}) {
-				if ($msg) {
-					print STDERR $msg;
-					undef $msg;
-				}
-				print STDERR " $elem->[1]\n";
-			}
-		}
-	' "$topic" "$not_in_next" "$not_in_master"
-	exit 1
-fi
-
-<<\DOC_END
-
-This sample hook safeguards topic branches that have been
-published from being rewound.
-
-The workflow assumed here is:
-
- * Once a topic branch forks from "master", "master" is never
-   merged into it again (either directly or indirectly).
-
- * Once a topic branch is fully cooked and merged into "master",
-   it is deleted.  If you need to build on top of it to correct
-   earlier mistakes, a new topic branch is created by forking at
-   the tip of the "master".  This is not strictly necessary, but
-   it makes it easier to keep your history simple.
-
- * Whenever you need to test or publish your changes to topic
-   branches, merge them into "next" branch.
-
-The script, being an example, hardcodes the publish branch name
-to be "next", but it is trivial to make it configurable via
-$GIT_DIR/config mechanism.
-
-With this workflow, you would want to know:
-
-(1) ... if a topic branch has ever been merged to "next".  Young
-    topic branches can have stupid mistakes you would rather
-    clean up before publishing, and things that have not been
-    merged into other branches can be easily rebased without
-    affecting other people.  But once it is published, you would
-    not want to rewind it.
-
-(2) ... if a topic branch has been fully merged to "master".
-    Then you can delete it.  More importantly, you should not
-    build on top of it -- other people may already want to
-    change things related to the topic as patches against your
-    "master", so if you need further changes, it is better to
-    fork the topic (perhaps with the same name) afresh from the
-    tip of "master".
-
-Let's look at this example:
-
-		   o---o---o---o---o---o---o---o---o---o "next"
-		  /       /           /           /
-		 /   a---a---b A     /           /
-		/   /               /           /
-	       /   /   c---c---c---c B         /
-	      /   /   /             \         /
-	     /   /   /   b---b C     \       /
-	    /   /   /   /             \     /
-    ---o---o---o---o---o---o---o---o---o---o---o "master"
-
-
-A, B and C are topic branches.
-
- * A has one fix since it was merged up to "next".
-
- * B has finished.  It has been fully merged up to "master" and "next",
-   and is ready to be deleted.
-
- * C has not merged to "next" at all.
-
-We would want to allow C to be rebased, refuse A, and encourage
-B to be deleted.
-
-To compute (1):
-
-	git rev-list ^master ^topic next
-	git rev-list ^master        next
-
-	if these match, topic has not merged in next at all.
-
-To compute (2):
-
-	git rev-list master..topic
-
-	if this is empty, it is fully merged to "master".
-
-DOC_END
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
deleted file mode 100755
index 656a1c5..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/pre-receive.sample
+++ /dev/null
@@ -1,24 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to make use of push options.
-# The example simply echoes all push options that start with 'echoback='
-# and rejects all pushes when the "reject" push option is used.
-#
-# To enable this hook, rename this file to "pre-receive".
-
-if test -n "$GIT_PUSH_OPTION_COUNT"
-then
-	i=0
-	while test "$i" -lt "$GIT_PUSH_OPTION_COUNT"
-	do
-		eval "value=\$GIT_PUSH_OPTION_$i"
-		case "$value" in
-		echoback=*)
-			echo "echo from the pre-receive-hook: ${value#*=}" >&2
-			;;
-		reject)
-			exit 1
-		esac
-		i=$((i + 1))
-	done
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
deleted file mode 100755
index 2eaf7ae..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/prepare-commit-msg.sample
+++ /dev/null
@@ -1,42 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to prepare the commit log message.
-# Called by "git commit" with the name of the file that has the
-# commit message, followed by the description of the commit
-# message's source.  The hook's purpose is to edit the commit
-# message file.  If the hook fails with a non-zero status,
-# the commit is aborted.
-#
-# To enable this hook, rename this file to "prepare-commit-msg".
-
-# This hook includes three examples. The first one removes the
-# "# Please enter the commit message..." help message.
-#
-# The second includes the output of "git diff --name-status -r"
-# into the message, just before the "git status" output.  It is
-# commented because it doesn't cope with --amend or with squashed
-# commits.
-#
-# The third example adds a Signed-off-by line to the message, that can
-# still be edited.  This is rarely a good idea.
-
-COMMIT_MSG_FILE=$1
-COMMIT_SOURCE=$2
-SHA1=$3
-
-/nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -ne 'print unless(m/^. Please enter the commit message/..m/^#$/)' "$COMMIT_MSG_FILE"
-
-# case "$COMMIT_SOURCE,$SHA1" in
-#  ,|template,)
-#    /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe '
-#       print "\n" . `git diff --cached --name-status -r`
-# 	 if /^#/ && $first++ == 0' "$COMMIT_MSG_FILE" ;;
-#  *) ;;
-# esac
-
-# SOB=$(git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
-# git interpret-trailers --in-place --trailer "$SOB" "$COMMIT_MSG_FILE"
-# if test -z "$COMMIT_SOURCE"
-# then
-#   /nix/store/3rh4x7j32p5v0kmrm8vcqfd5vj626w9k-perl-5.38.2/bin/perl -i.bak -pe 'print "\n" if !$first_line++' "$COMMIT_MSG_FILE"
-# fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
deleted file mode 100755
index 924736b..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/push-to-checkout.sample
+++ /dev/null
@@ -1,78 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to update a checked-out tree on a git push.
-#
-# This hook is invoked by git-receive-pack(1) when it reacts to git
-# push and updates reference(s) in its repository, and when the push
-# tries to update the branch that is currently checked out and the
-# receive.denyCurrentBranch configuration variable is set to
-# updateInstead.
-#
-# By default, such a push is refused if the working tree and the index
-# of the remote repository has any difference from the currently
-# checked out commit; when both the working tree and the index match
-# the current commit, they are updated to match the newly pushed tip
-# of the branch. This hook is to be used to override the default
-# behaviour; however the code below reimplements the default behaviour
-# as a starting point for convenient modification.
-#
-# The hook receives the commit with which the tip of the current
-# branch is going to be updated:
-commit=$1
-
-# It can exit with a non-zero status to refuse the push (when it does
-# so, it must not modify the index or the working tree).
-die () {
-	echo >&2 "$*"
-	exit 1
-}
-
-# Or it can make any necessary changes to the working tree and to the
-# index to bring them to the desired state when the tip of the current
-# branch is updated to the new commit, and exit with a zero status.
-#
-# For example, the hook can simply run git read-tree -u -m HEAD "$1"
-# in order to emulate git fetch that is run in the reverse direction
-# with git push, as the two-tree form of git read-tree -u -m is
-# essentially the same as git switch or git checkout that switches
-# branches while keeping the local changes in the working tree that do
-# not interfere with the difference between the branches.
-
-# The below is a more-or-less exact translation to shell of the C code
-# for the default behaviour for git's push-to-checkout hook defined in
-# the push_to_deploy() function in builtin/receive-pack.c.
-#
-# Note that the hook will be executed from the repository directory,
-# not from the working tree, so if you want to perform operations on
-# the working tree, you will have to adapt your code accordingly, e.g.
-# by adding "cd .." or using relative paths.
-
-if ! git update-index -q --ignore-submodules --refresh
-then
-	die "Up-to-date check failed"
-fi
-
-if ! git diff-files --quiet --ignore-submodules --
-then
-	die "Working directory has unstaged changes"
-fi
-
-# This is a rough translation of:
-#
-#   head_has_history() ? "HEAD" : EMPTY_TREE_SHA1_HEX
-if git cat-file -e HEAD 2>/dev/null
-then
-	head=HEAD
-else
-	head=$(git hash-object -t tree --stdin </dev/null)
-fi
-
-if ! git diff-index --quiet --cached --ignore-submodules $head --
-then
-	die "Working directory has staged changes"
-fi
-
-if ! git read-tree -u -m "$commit"
-then
-	die "Could not update working tree to new HEAD"
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
deleted file mode 100755
index 711f33f..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/sendemail-validate.sample
+++ /dev/null
@@ -1,77 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-
-# An example hook script to validate a patch (and/or patch series) before
-# sending it via email.
-#
-# The hook should exit with non-zero status after issuing an appropriate
-# message if it wants to prevent the email(s) from being sent.
-#
-# To enable this hook, rename this file to "sendemail-validate".
-#
-# By default, it will only check that the patch(es) can be applied on top of
-# the default upstream branch without conflicts in a secondary worktree. After
-# validation (successful or not) of the last patch of a series, the worktree
-# will be deleted.
-#
-# The following config variables can be set to change the default remote and
-# remote ref that are used to apply the patches against:
-#
-#   sendemail.validateRemote (default: origin)
-#   sendemail.validateRemoteRef (default: HEAD)
-#
-# Replace the TODO placeholders with appropriate checks according to your
-# needs.
-
-validate_cover_letter () {
-	file="$1"
-	# TODO: Replace with appropriate checks (e.g. spell checking).
-	true
-}
-
-validate_patch () {
-	file="$1"
-	# Ensure that the patch applies without conflicts.
-	git am -3 "$file" || return
-	# TODO: Replace with appropriate checks for this patch
-	# (e.g. checkpatch.pl).
-	true
-}
-
-validate_series () {
-	# TODO: Replace with appropriate checks for the whole series
-	# (e.g. quick build, coding style checks, etc.).
-	true
-}
-
-# main -------------------------------------------------------------------------
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1
-then
-	remote=$(git config --default origin --get sendemail.validateRemote) &&
-	ref=$(git config --default HEAD --get sendemail.validateRemoteRef) &&
-	worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
-	git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
-	git config --replace-all sendemail.validateWorktree "$worktree"
-else
-	worktree=$(git config --get sendemail.validateWorktree)
-fi || {
-	echo "sendemail-validate: error: failed to prepare worktree" >&2
-	exit 1
-}
-
-unset GIT_DIR GIT_WORK_TREE
-cd "$worktree" &&
-
-if grep -q "^diff --git " "$1"
-then
-	validate_patch "$1"
-else
-	validate_cover_letter "$1"
-fi &&
-
-if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"
-then
-	git config --unset-all sendemail.validateWorktree &&
-	trap 'git worktree remove -ff "$worktree"' EXIT &&
-	validate_series
-fi
diff --git a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample b/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
deleted file mode 100755
index 048bf8d..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/hooks/update.sample
+++ /dev/null
@@ -1,128 +0,0 @@
-#!/nix/store/5l50g7kzj7v0rdhshld1vx46rf2k5lf9-bash-5.2p26/bin/bash
-#
-# An example hook script to block unannotated tags from entering.
-# Called by "git receive-pack" with arguments: refname sha1-old sha1-new
-#
-# To enable this hook, rename this file to "update".
-#
-# Config
-# ------
-# hooks.allowunannotated
-#   This boolean sets whether unannotated tags will be allowed into the
-#   repository.  By default they won't be.
-# hooks.allowdeletetag
-#   This boolean sets whether deleting tags will be allowed in the
-#   repository.  By default they won't be.
-# hooks.allowmodifytag
-#   This boolean sets whether a tag may be modified after creation. By default
-#   it won't be.
-# hooks.allowdeletebranch
-#   This boolean sets whether deleting branches will be allowed in the
-#   repository.  By default they won't be.
-# hooks.denycreatebranch
-#   This boolean sets whether remotely creating branches will be denied
-#   in the repository.  By default this is allowed.
-#
-
-# --- Command line
-refname="$1"
-oldrev="$2"
-newrev="$3"
-
-# --- Safety check
-if [ -z "$GIT_DIR" ]; then
-	echo "Don't run this script from the command line." >&2
-	echo " (if you want, you could supply GIT_DIR then run" >&2
-	echo "  $0 <ref> <oldrev> <newrev>)" >&2
-	exit 1
-fi
-
-if [ -z "$refname" -o -z "$oldrev" -o -z "$newrev" ]; then
-	echo "usage: $0 <ref> <oldrev> <newrev>" >&2
-	exit 1
-fi
-
-# --- Config
-allowunannotated=$(git config --type=bool hooks.allowunannotated)
-allowdeletebranch=$(git config --type=bool hooks.allowdeletebranch)
-denycreatebranch=$(git config --type=bool hooks.denycreatebranch)
-allowdeletetag=$(git config --type=bool hooks.allowdeletetag)
-allowmodifytag=$(git config --type=bool hooks.allowmodifytag)
-
-# check for no description
-projectdesc=$(sed -e '1q' "$GIT_DIR/description")
-case "$projectdesc" in
-"Unnamed repository"* | "")
-	echo "*** Project description file hasn't been set" >&2
-	exit 1
-	;;
-esac
-
-# --- Check types
-# if $newrev is 0000...0000, it's a commit to delete a ref.
-zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')
-if [ "$newrev" = "$zero" ]; then
-	newrev_type=delete
-else
-	newrev_type=$(git cat-file -t $newrev)
-fi
-
-case "$refname","$newrev_type" in
-	refs/tags/*,commit)
-		# un-annotated tag
-		short_refname=${refname##refs/tags/}
-		if [ "$allowunannotated" != "true" ]; then
-			echo "*** The un-annotated tag, $short_refname, is not allowed in this repository" >&2
-			echo "*** Use 'git tag [ -a | -s ]' for tags you want to propagate." >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,delete)
-		# delete tag
-		if [ "$allowdeletetag" != "true" ]; then
-			echo "*** Deleting a tag is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/tags/*,tag)
-		# annotated tag
-		if [ "$allowmodifytag" != "true" ] && git rev-parse $refname > /dev/null 2>&1
-		then
-			echo "*** Tag '$refname' already exists." >&2
-			echo "*** Modifying a tag is not allowed in this repository." >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,commit)
-		# branch
-		if [ "$oldrev" = "$zero" -a "$denycreatebranch" = "true" ]; then
-			echo "*** Creating a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/heads/*,delete)
-		# delete branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	refs/remotes/*,commit)
-		# tracking branch
-		;;
-	refs/remotes/*,delete)
-		# delete tracking branch
-		if [ "$allowdeletebranch" != "true" ]; then
-			echo "*** Deleting a tracking branch is not allowed in this repository" >&2
-			exit 1
-		fi
-		;;
-	*)
-		# Anything else (is there anything else?)
-		echo "*** Update hook: unknown type of update to ref $refname of type $newrev_type" >&2
-		exit 1
-		;;
-esac
-
-# --- Finished
-exit 0
diff --git a/home/roman/backup/home-manager/home-manager/.git/info/exclude b/home/roman/backup/home-manager/home-manager/.git/info/exclude
deleted file mode 100644
index a5196d1..0000000
--- a/home/roman/backup/home-manager/home-manager/.git/info/exclude
+++ /dev/null
@@ -1,6 +0,0 @@
-# git ls-files --others --exclude-from=.git/info/exclude
-# Lines that start with '#' are comments.
-# For a project mostly in C, the following would be a good set of
-# exclude patterns (uncomment them if you want to use them):
-# *.[oa]
-# *~
diff --git a/home/roman/backup/home-manager/home-manager/config.nix b/home/roman/backup/home-manager/home-manager/config.nix
deleted file mode 100644
index 19daeb5..0000000
--- a/home/roman/backup/home-manager/home-manager/config.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-# Here lives shit I don't understand
-{pkgs, config, ... }:
-
-{
-  home.username = "roman";
-  home.homeDirectory = "/home/roman";
-  home.stateVersion = "23.11"; # Do not change
-
-  # Enable XDG desktop portal
-  xdg.portal = {
-    enable = true;
-    extraPortals = [ pkgs.xdg-desktop-portal-gtk ];
-    config.common.default = "gtk";
-  };
-
-  # Enable Pipewire
-
-  programs.home-manager.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.lock b/home/roman/backup/home-manager/home-manager/flake.lock
deleted file mode 100644
index f909396..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.lock
+++ /dev/null
@@ -1,83 +0,0 @@
-{
-  "nodes": {
-    "ags": {
-      "inputs": {
-        "nixpkgs": "nixpkgs"
-      },
-      "locked": {
-        "lastModified": 1708986959,
-        "narHash": "sha256-pTh3n2Lp8Twr8Qv30E86gU6NfoNoId7Da+6P1qEG/Jc=",
-        "owner": "Aylur",
-        "repo": "ags",
-        "rev": "ee3e65e8003a39c2ff1f46dca60308771da6072c",
-        "type": "github"
-      },
-      "original": {
-        "owner": "Aylur",
-        "repo": "ags",
-        "type": "github"
-      }
-    },
-    "home-manager": {
-      "inputs": {
-        "nixpkgs": [
-          "nixpkgs"
-        ]
-      },
-      "locked": {
-        "lastModified": 1708451036,
-        "narHash": "sha256-tgZ38NummEdnXvxj4D0StHBzXgceAw8CptytHljH790=",
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "rev": "517601b37c6d495274454f63c5a483c8e3ca6be1",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nix-community",
-        "repo": "home-manager",
-        "type": "github"
-      }
-    },
-    "nixpkgs": {
-      "locked": {
-        "lastModified": 1708475490,
-        "narHash": "sha256-g1v0TsWBQPX97ziznfJdWhgMyMGtoBFs102xSYO4syU=",
-        "owner": "NixOS",
-        "repo": "nixpkgs",
-        "rev": "0e74ca98a74bc7270d28838369593635a5db3260",
-        "type": "github"
-      },
-      "original": {
-        "owner": "NixOS",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "nixpkgs_2": {
-      "locked": {
-        "lastModified": 1708296515,
-        "narHash": "sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=",
-        "owner": "nixos",
-        "repo": "nixpkgs",
-        "rev": "b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa",
-        "type": "github"
-      },
-      "original": {
-        "owner": "nixos",
-        "ref": "nixos-unstable",
-        "repo": "nixpkgs",
-        "type": "github"
-      }
-    },
-    "root": {
-      "inputs": {
-        "ags": "ags",
-        "home-manager": "home-manager",
-        "nixpkgs": "nixpkgs_2"
-      }
-    }
-  },
-  "root": "root",
-  "version": 7
-}
diff --git a/home/roman/backup/home-manager/home-manager/flake.nix b/home/roman/backup/home-manager/home-manager/flake.nix
deleted file mode 100644
index 855dfa7..0000000
--- a/home/roman/backup/home-manager/home-manager/flake.nix
+++ /dev/null
@@ -1,35 +0,0 @@
-{
-  description = "Home Manager configuration of roman";
-
-  inputs = {
-    # Specify the source of Home Manager and Nixpkgs.
-    nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
-    home-manager = {
-      url = "github:nix-community/home-manager";
-      inputs.nixpkgs.follows = "nixpkgs";
-    };
-
-    # AGS
-    ags.url = "github:Aylur/ags";
-  };
-
-  outputs = { nixpkgs, home-manager, ... }@inputs:
-    let
-      system = "x86_64-linux";
-      pkgs = nixpkgs.legacyPackages.${system};
-    in {
-      homeConfigurations."roman" = home-manager.lib.homeManagerConfiguration {
-        inherit pkgs;
-
-        # Specify your home configuration modules here, for example,
-        # the path to your home.nix.
-        modules = [ ./home.nix ];
-
-        # Optionally use extraSpecialArgs
-        # to pass through arguments to home.nix
-
-	# AGS
-	extraSpecialArgs = { inherit inputs; };
-      };
-    };
-}
diff --git a/home/roman/backup/home-manager/home-manager/home.nix b/home/roman/backup/home-manager/home-manager/home.nix
deleted file mode 100644
index f869802..0000000
--- a/home/roman/backup/home-manager/home-manager/home.nix
+++ /dev/null
@@ -1,40 +0,0 @@
-#  _   _    ____    _    _   _____
-# | | | |  / __ \  | \  / | |  ___|
-# | |_| | | |  | | |  \/  | | |__
-# |  _  | | |  | | | |\/| | |  __|
-# | | | | | |__| | | |  | | | |___
-# |_| |_|  \____/  |_|  |_| |_____|
-
-# By Roman Bezroutchko
-
-
-{ inputs, config, pkgs, ... }:
-
-{
-  imports = [
-    ./package_config/package_config.nix
-    ./config.nix
-  ];
-  nixpkgs.config.allowUnfree = true;
-
-  home.packages = with pkgs; [
-    # Essentials
-    floorp
-    kitty
-    (waybar.overrideAttrs (oldAttrs: { mesonFlags = oldAttrs.mesonFlags ++ [ "-Dexperimental=true" ]; }))
-    mako
-    libnotify
-    hyprpaper
-    wofi
-    nerdfonts
-
-    # Other
-    lf
-    vscodium 
-    lutris
-    libreoffice
-  ];
-
-  home.file = {
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix b/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
deleted file mode 100644
index f3ae57e..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/ags.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#             _____   _____
-#     /\     / ____| / ____|
-#    /  \   | |  __  | (___  
-#   / /\ \  | | |_ | \___  \ 
-#  / ____ \ | |__| |  ____) |
-# /_/    \_\ \_____| |_____/ 
-                        
-# By Roman Bezroutchko
-
-{ inputs, config, pkgs, ... }:
-{
-  # add the home manager module
-  imports = [ 
-    inputs.ags.homeManagerModules.default 
-  ];
-
-  programs.ags = {
-    enable = true;
-
-    # additional packages to add to gjs's runtime
-    extraPackages = with pkgs; [
-      gtksourceview
-      webkitgtk
-      accountsservice
-    ];
-  };
-
-  xdg.configFile = {
-    "ags/config.js".source = ./config.js;
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js b/home/roman/backup/home-manager/home-manager/package_config/ags/bar.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js b/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
deleted file mode 100644
index ce08770..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/ags/config.js
+++ /dev/null
@@ -1,5 +0,0 @@
-export default {
-    windows: [
-        // this is where window definitions will go
-    ]
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js b/home/roman/backup/home-manager/home-manager/package_config/ags/variables.js
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
deleted file mode 100644
index 637d4a5..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/appearance.nix
+++ /dev/null
@@ -1,60 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    general = {
-      gaps_in = 5;
-      gaps_out = 20;
-      border_size = 2;
-      "col.active_border" = "rgba(33ccffee) rgba(00ff99ee) 45deg";
-      "col.inactive_border" = "rgba(595959aa)";
-
-      layout = "dwindle";
-
-      allow_tearing = false;
-    };
-
-    decoration = {
-      rounding = 10;
-
-      blur = {
-        enabled = true;
-        size = 3;
-        passes = 1;
-        
-        vibrancy = 0.1696;
-      };
-
-      drop_shadow = true;
-      shadow_range = 4;
-      shadow_render_power = 3;
-      "col.shadow" = "rgba(1a1a1aee)";
-    };
-
-    animations = {
-      enabled = true;
-      bezier = [ "myBezier, 0.05, 0.9, 0.1, 1.05" ];
-      animation = [ 
-	"windows, 1, 7, myBezier"
-    	"windowsOut, 1, 7, default, popin 80%"
-    	"border, 1, 10, default"
-    	"borderangle, 1, 8, default"
- 	"fade, 1, 7, default"
-    	"workspaces, 1, 6, default"
-      ];
-    };
-
-    dwindle = {
-      pseudotile = true;
-      preserve_split = true;
-    };
-
-    master = {
-      new_is_master = true;
-    };
-
-    misc = {
-      force_default_wallpaper = 1;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
deleted file mode 100644
index 234a376..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/hyprland.nix
+++ /dev/null
@@ -1,31 +0,0 @@
-#  _    ___     _______  _____  _               _   _ _____  
-# | |  | \ \   / /  __ \|  __ \| |        /\   | \ | |  __ \ 
-# | |__| |\ \_/ /| |__) | |__) | |       /  \  |  \| | |  | |
-# |  __  | \   / |  ___/|  _  /| |      / /\ \ | . ` | |  | |
-# | |  | |  | |  | |    | | \ \| |____ / ____ \| |\  | |__| |
-# |_|  |_|  |_|  |_|    |_|  \_\______/_/    \_\_| \_|_____/ 
-
-# By Roman Bezroutchko
-
-{ config, pkgs, ... }:
-
-{
-  imports = [
-    # Startup
-    ./startup.nix
-
-    # Appearance
-    ./appearance.nix
-
-    # Input
-    ./input.nix
-
-    # Keybindings
-    ./keybinds.nix
-
-    # Other
-    ./other.nix
-  ];  
-
-  wayland.windowManager.hyprland.enable = true;
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
deleted file mode 100644
index 61594b0..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/input.nix
+++ /dev/null
@@ -1,23 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    input = {
-      kb_layout = "us";
-      kb_variant = "";
-      kb_model ="";
-      kb_options ="";
-      kb_rules ="";
-      follow_mouse = 1;
-
-      touchpad = {
-        natural_scroll = true;
-      };
-      sensitivity = 0;
-    };
-
-    gestures = {
-      workspace_swipe = true;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
deleted file mode 100644
index 7b2adfa..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/keybinds.nix
+++ /dev/null
@@ -1,41 +0,0 @@
-{ config, pkgs, ... }:
-
-let
-  # Workspace bindings
-  workspaces_num = [ 1 2 3 4 5 6 7 8 9 ];
-  generateWorkspace = num: "SUPER, ${toString num}, workspace, ${toString num}";
-  generateMoveToWorkspace = num: "SUPER SHIFT, ${toString num}, movetoworkspace, ${toString num}";
-  workspaceBindings = (map generateWorkspace(workspaces_num)) ++ (map generateMoveToWorkspace(workspaces_num));
-
-in 
-{
-  wayland.windowManager.hyprland.settings = {
-    bind = [
-      # Controls
-      "SUPER, Space, killactive"
-
-      "SUPER, H, movefocus, l"
-      "SUPER SHIFT, H, movewindow, l"
-      "SUPER, J, movefocus, d"
-      "SUPER SHIFT, J, movewindow, d"
-      "SUPER, K, movefocus, u"
-      "SUPER SHIFT, K, movewindow, u"
-      "SUPER, L, movefocus, r"
-      "SUPER SHIFT, L, movewindow, r"
-
-      # Important applications
-      "SUPER, Tab, exec, wofi --show drun"
-      "SUPER, Return, exec, kitty"
-      "SUPER, B, exec, floorp"
-
-      # Other applications
-    ] 
-    ++
-    workspaceBindings;
-
-    bindm = [
-      "SUPER, mouse:272, movewindow"
-      "SUPER, mouse:273, resizewindow"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
deleted file mode 100644
index baa7aa3..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/other.nix
+++ /dev/null
@@ -1,9 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    monitor = [
-      ", preferred, auto, 1"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/plugins.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix b/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
deleted file mode 100644
index 32c0717..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/hypr/startup.nix
+++ /dev/null
@@ -1,14 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  wayland.windowManager.hyprland.settings = {
-    env = [
-      "XCURSOR_SIZE, 24"
-      "QT_QPA_PLATFORMTHEME, qt5ct"
-    ];
-
-    exec-once = [
-      "waybar"
-    ];
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/other.nix b/home/roman/backup/home-manager/home-manager/package_config/other.nix
deleted file mode 100644
index 38ba247..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/other.nix
+++ /dev/null
@@ -1,19 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  # Git
-  programs.git = {
-    enable = true;
-    userName = "Jozhin-s-Bazhin";
-    userEmail = "rbezroutchko@gmail.com";
-  };
-
-  # GTK
-  gtk = {
-    enable = true;
-    font = {
-      name = "Sans";
-      size = 11;
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix b/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
deleted file mode 100644
index 2004f66..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/package_config.nix
+++ /dev/null
@@ -1,10 +0,0 @@
-{ pkgs, config, ... }:
-
-{
-  imports = [
-    ./other.nix
-    ./ags/ags.nix
-    ./hypr/hyprland.nix
-    ./zsh.nix
-  ];
-}
diff --git a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix b/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
deleted file mode 100644
index d357641..0000000
--- a/home/roman/backup/home-manager/home-manager/package_config/zsh.nix
+++ /dev/null
@@ -1,24 +0,0 @@
-{ config, pkgs, ... }:
-
-{ 
-  programs.zsh = {
-    enable = true;
-    enableAutosuggestions = true;
-    enableCompletion = true;
-    enableVteIntegration = true;
-
-    # Aliases
-    shellAliases = {
-
-      # Basic stuff
-      v = "nvim";
-      vi = "nvim";
-      vim = "nvim";
-
-      # Nix rebuilds
-      rbs = "bash ~/scripts/rebuild-aliases/rebuild-switch";
-      rbh = "bash ~/scripts/rebuild-aliases/home-switch";
-      rba = "bash ~/scripts/rebuild-aliases/backup-all";
-    };
-  };
-}
diff --git a/home/roman/backup/home-manager/home-manager/style.nix b/home/roman/backup/home-manager/home-manager/style.nix
deleted file mode 100644
index e69de29..0000000
diff --git a/home/roman/backup/home-manager/home-manager/weird_shit.nix b/home/roman/backup/home-manager/home-manager/weird_shit.nix
deleted file mode 100644
index 35d6715..0000000
--- a/home/roman/backup/home-manager/home-manager/weird_shit.nix
+++ /dev/null
@@ -1,4 +0,0 @@
-{ config, pkgs, ... }:
-
-{
-  

